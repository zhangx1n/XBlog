<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>博文</title>
        <link>localhost/blog</link>
        <description>✍️</description>
        <lastBuildDate>Sun, 31 Mar 2024 01:38:29 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[主流llm大模型微调小结]]></title>
            <link>localhost/blog/blog/posts/2024/latest-llm-model-fine-tune.html</link>
            <guid>localhost/blog/blog/posts/2024/latest-llm-model-fine-tune.html</guid>
            <pubDate>Sun, 25 Feb 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[<h2 id="引言" tabindex="-1">引言 <a class="header-anchor" href="#引言" aria-label="Permalink to &quot;引言&quot;">&ZeroWidthSpace;</a></h2>
<p>llm大模型目前比较火的两个垂直领域应用的技术路线: PEFT(参数有效微调)和RAG(检索增强生成). 目前这两个方向按实用性来说, 如果单看垂直领域知识库, 那确实RAG能以更低的成本和更快的速度应用起来.<br>
但是<strong>微调训练</strong>能为大语言模型增加新的功能, 比如翻译, 使用agent(agent工具调用微调), 所以它依然非常重要, 并且微调技术的增强和RAG是可以共同促进的.
下文就以简单的身份微调作为例子, 简单实践下llm微调.</p>
]]></description>
            <content:encoded><![CDATA[<h2 id="引言" tabindex="-1">引言 <a class="header-anchor" href="#引言" aria-label="Permalink to &quot;引言&quot;">&ZeroWidthSpace;</a></h2>
<p>llm大模型目前比较火的两个垂直领域应用的技术路线: PEFT(参数有效微调)和RAG(检索增强生成). 目前这两个方向按实用性来说, 如果单看垂直领域知识库, 那确实RAG能以更低的成本和更快的速度应用起来.<br>
但是<strong>微调训练</strong>能为大语言模型增加新的功能, 比如翻译, 使用agent(agent工具调用微调), 所以它依然非常重要, 并且微调技术的增强和RAG是可以共同促进的.
下文就以简单的身份微调作为例子, 简单实践下llm微调.</p>
<hr>
<h2 id="大模型微调技术路线" tabindex="-1">大模型微调技术路线 <a class="header-anchor" href="#大模型微调技术路线" aria-label="Permalink to &quot;大模型微调技术路线&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="sft-有监督微调" tabindex="-1">SFT (有监督微调) <a class="header-anchor" href="#sft-有监督微调" aria-label="Permalink to &quot;SFT (有监督微调)&quot;">&ZeroWidthSpace;</a></h3>
<p>简单的说就是<strong>传统全参数微调</strong>, 特点就是, 标记数据中将输入数据映射到期望的输出去.
计算成本低于预训练(从训练数据的量来说, 但是对于大模型来说,这个量依然很大)
例子:</p>
<ul>
<li>ImageNet数据集预训练后, 通过较少的数据集迁移到其他主题的数据集上的图像识别模型</li>
<li>stable diffusion 的dreambooth微调(全参)</li>
<li>llm fine-tune (比如bert 一般就是基于这种方式全参微调)</li>
</ul>
<h3 id="peft-参数有效微调" tabindex="-1">PEFT (参数有效微调) <a class="header-anchor" href="#peft-参数有效微调" aria-label="Permalink to &quot;PEFT (参数有效微调)&quot;">&ZeroWidthSpace;</a></h3>
<p>旨在减少在微调过程中需要更新的参数数量, 通常是在微调的时候固定模型的一部分参数, 只更新一部分参数, 或者在原模型中增加一个可调的小型网络来对模型进行微调.
例子:</p>
<ul>
<li>Prefix Tuning</li>
</ul>
<ul>
<li>ptuning</li>
<li>ptuning v2</li>
<li>LoRA</li>
<li>stable diffusion 中的 text-inversion 、 hyperNetwork 、lora等技术</li>
<li>...</li>
</ul>
<h3 id="rlhf-人类反馈的强化学习" tabindex="-1">RLHF (人类反馈的强化学习) <a class="header-anchor" href="#rlhf-人类反馈的强化学习" aria-label="Permalink to &quot;RLHF (人类反馈的强化学习)&quot;">&ZeroWidthSpace;</a></h3>
<p>chatgpt中用到的一种基于强化学习方法的技术.
激励模型训练，使语言模型补全与人工标签员的偏好保持一致。类似于, 水平高的人类围棋手就能够训练出水平高的围棋选手一样. rlhf也是, 通过人类对生成结果的偏好选择进行反馈, 然后让llm能够生成更多人类偏好的内容.
 例子:</p>
<ul>
<li>chatgpt 重要的微调流程</li>
</ul>
<h2 id="目前比较主流的peft微调" tabindex="-1">目前比较主流的PEFT微调 <a class="header-anchor" href="#目前比较主流的peft微调" aria-label="Permalink to &quot;目前比较主流的PEFT微调&quot;">&ZeroWidthSpace;</a></h2>
<p>目前的PEFT微调方法也还在不停的更新中, 不过截止到此文编写只是, lora应该是比较主流的. 对于llm大模型, 还有ptuning v2</p>
<h3 id="lora微调" tabindex="-1">LoRA微调 <a class="header-anchor" href="#lora微调" aria-label="Permalink to &quot;LoRA微调&quot;">&ZeroWidthSpace;</a></h3>
<p>LoRA通过添加一个低秩线性适应层到原有模型，冻结原模型权重, 只对新增加的低秩矩阵进行微调，大大降低了微调的复杂度。lora微调的结构图如下, 它有效的原因是模型往往是过参数化的, 大部分的任务只需要改动少量权重(和对应新任务相关的权重) 就应该可以有效果. LoRA 不会改变层的所有组件中的权重矩阵 W，而是创建两个较小的矩阵 A 和 B，其乘积大致表示对 W 的修改。适应可以在数学上表示为 Y = W+AB. 通过微调AB就可以让模型适配新的任务.</p>
<p><img src="./pic/lora微调注入结构.png" alt=""></p>
<h3 id="qlora" tabindex="-1">QLoRA <a class="header-anchor" href="#qlora" aria-label="Permalink to &quot;QLoRA&quot;">&ZeroWidthSpace;</a></h3>
<p>QLoRA是 LoRA 的扩展版本，它的工作原理是将预训练LLM的权重参数的精度量化为 4 位精度。通常，训练模型的参数以 32 位格式存储，但 QLoRA 将它们压缩为 4 位格式。这减少了 LLM的内存占用，从而可以在单个 GPU 上对其进行微调。这种方法显著减少了内存占用，使得在功能较弱的硬件（包括消费类 GPU）上运行LLM模型成为可能。
<img src="./pic/对比lora-qlora.png" alt=""></p>
<h3 id="lora-与qlora的对比" tabindex="-1">LoRA 与QLoRA的对比 <a class="header-anchor" href="#lora-与qlora的对比" aria-label="Permalink to &quot;LoRA 与QLoRA的对比&quot;">&ZeroWidthSpace;</a></h3>
<p>LoRA优点:</p>
<ul>
<li>允许高效的模型微调，只需要更新模型中的小部分参数。</li>
<li>提供了参数扩展的灵活性，而不需要大规模改动原有的权重。<br>
LoRA缺点:</li>
<li>相对于量化版本，存储和计算资源需求更高。</li>
<li>对于资源有限的环境来说，可能不如量化方法高效。<br>
QLoRA优点:</li>
<li>通过量化减少了模型的内存占用和计算资源使用。</li>
<li>提高了模型在资源受限设备上的适用性和能效。<br>
QLoRA缺点:</li>
<li>量化可能会引起模型精度的损失，尤其是在低比特宽度量化时。</li>
<li>需要仔细调优量化级别，以及可能在某些硬件上不提供性能优势。</li>
<li>并且QLoRA由于采用了低精度, 训练难度也会大一些</li>
</ul>
<h3 id="ptuning-v2" tabindex="-1">ptuning v2 <a class="header-anchor" href="#ptuning-v2" aria-label="Permalink to &quot;ptuning v2&quot;">&ZeroWidthSpace;</a></h3>
<p>主流还是LoRA系列的. ptunning 目前好像主要chatglm在用. ptunning v2 相比于ptuning v1增加了注入的层数, 让ptuning在参数量10b以下的模型也能达到还不错的效果.</p>
<h2 id="llm-lora-训练" tabindex="-1">llm LoRA 训练 <a class="header-anchor" href="#llm-lora-训练" aria-label="Permalink to &quot;llm LoRA 训练&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li>可以参考不同的模型的各自训练微调的说明</li>
<li>huggingface PEFT库</li>
<li>带Webui的 <a href="https://github.com/hiyouga/LLaMA-Factory" target="_blank" rel="noreferrer">llama-factory</a> 体验也还可以</li>
<li>etc...</li>
</ul>
<h3 id="llama-factory-llama-board-微调模型" tabindex="-1">llama-factory(llama-board) 微调模型 <a class="header-anchor" href="#llama-factory-llama-board-微调模型" aria-label="Permalink to &quot;llama-factory(llama-board) 微调模型&quot;">&ZeroWidthSpace;</a></h3>
<p>配置环境安装:
下面以qwen:7b-chat模型为例子, 用24G运存的GPU进行微调.</p>
<div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #FFCB6B">git</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">clone</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">https://github.com/hiyouga/LLaMA-Factory.git</span></span>
<span class="line"><span style="color: #FFCB6B">conda</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">create</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">-n</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">llama_factory</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">python=</span><span style="color: #F78C6C">3.10</span></span>
<span class="line"><span style="color: #FFCB6B">conda</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">activate</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">llama_factory</span></span>
<span class="line"><span style="color: #82AAFF">cd</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">LLaMA-Factory</span></span>
<span class="line"><span style="color: #FFCB6B">pip</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">install</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">-r</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">requirements.txt</span></span>
<span class="line"></span>
<span class="line"><span style="color: #676E95; font-style: italic"># 直接启动一个webui界面, 从0开始训练</span></span>
<span class="line"><span style="color: #A6ACCD">CUDA_VISIBLE_DEVICES</span><span style="color: #89DDFF">=</span><span style="color: #F78C6C">0</span><span style="color: #A6ACCD"> python src/train_web.py</span></span>
<span class="line"></span>
<span class="line"><span style="color: #676E95; font-style: italic"># webui界面可以把训练的命令参数保留下来, 用于下次的复现, 如下</span></span>
<span class="line"><span style="color: #A6ACCD">CUDA_VISIBLE_DEVICES</span><span style="color: #89DDFF">=</span><span style="color: #F78C6C">0</span><span style="color: #A6ACCD"> python src/train_bash.py \</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #FFCB6B">--stage</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">sft</span><span style="color: #A6ACCD"> \</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #C3E88D">--do_train</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">True</span><span style="color: #A6ACCD"> \</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #C3E88D">--model_name_or_path</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">qwen/Qwen1.</span><span style="color: #F78C6C">5</span><span style="color: #C3E88D">-7B-Chat</span><span style="color: #A6ACCD"> \</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #C3E88D">--adapter_name_or_path</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">saves/Qwen1.</span><span style="color: #F78C6C">5</span><span style="color: #C3E88D">-7B-Chat/lora/train_2024-</span><span style="color: #F78C6C">02</span><span style="color: #C3E88D">-</span><span style="color: #F78C6C">26</span><span style="color: #C3E88D">-</span><span style="color: #F78C6C">20</span><span style="color: #C3E88D">-</span><span style="color: #F78C6C">08</span><span style="color: #C3E88D">-</span><span style="color: #F78C6C">03</span><span style="color: #A6ACCD"> \</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #C3E88D">--finetuning_type</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">lora</span><span style="color: #A6ACCD"> \</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #C3E88D">--template</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">qwen</span><span style="color: #A6ACCD"> \</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #C3E88D">--dataset_dir</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">data</span><span style="color: #A6ACCD"> \</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #C3E88D">--dataset</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">self_cognition</span><span style="color: #A6ACCD"> \</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #C3E88D">--cutoff_len</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">1024</span><span style="color: #A6ACCD"> \</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #C3E88D">--learning_rate</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0.0001</span><span style="color: #A6ACCD"> \</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #C3E88D">--num_train_epochs</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">10.0</span><span style="color: #A6ACCD"> \</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #C3E88D">--max_samples</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">100000</span><span style="color: #A6ACCD"> \</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #C3E88D">--per_device_train_batch_size</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">4</span><span style="color: #A6ACCD"> \</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #C3E88D">--gradient_accumulation_steps</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">4</span><span style="color: #A6ACCD"> \</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #C3E88D">--lr_scheduler_type</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">cosine</span><span style="color: #A6ACCD"> \</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #C3E88D">--max_grad_norm</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">1.0</span><span style="color: #A6ACCD"> \</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #C3E88D">--logging_steps</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">5</span><span style="color: #A6ACCD"> \</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #C3E88D">--save_steps</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">100</span><span style="color: #A6ACCD"> \</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #C3E88D">--warmup_steps</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0</span><span style="color: #A6ACCD"> \</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #C3E88D">--output_dir</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">saves/Qwen1.</span><span style="color: #F78C6C">5</span><span style="color: #C3E88D">-7B-Chat/lora/train_2024-</span><span style="color: #F78C6C">02</span><span style="color: #C3E88D">-</span><span style="color: #F78C6C">26</span><span style="color: #C3E88D">-</span><span style="color: #F78C6C">20</span><span style="color: #C3E88D">-</span><span style="color: #F78C6C">08</span><span style="color: #C3E88D">-</span><span style="color: #F78C6C">03</span><span style="color: #A6ACCD"> \</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #C3E88D">--fp16</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">True</span><span style="color: #A6ACCD"> \</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #C3E88D">--lora_rank</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">8</span><span style="color: #A6ACCD"> \</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #C3E88D">--lora_dropout</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0.1</span><span style="color: #A6ACCD"> \</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #C3E88D">--lora_target</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">q_proj,v_proj</span><span style="color: #A6ACCD"> \</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #C3E88D">--plot_loss</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">True</span></span></code></pre>
</div><h3 id="webui-界面" tabindex="-1">webui 界面 <a class="header-anchor" href="#webui-界面" aria-label="Permalink to &quot;webui 界面&quot;">&ZeroWidthSpace;</a></h3>
<p><img src="./pic/latest-llm-model-fine-tune-webui.png" alt=""></p>
<h3 id="_3epoch训练身份效果" tabindex="-1">3epoch训练身份效果 <a class="header-anchor" href="#_3epoch训练身份效果" aria-label="Permalink to &quot;3epoch训练身份效果&quot;">&ZeroWidthSpace;</a></h3>
<p>训练完后加载lora进行检查:
<img src="./pic/3epoch.png" alt="3epoch"></p>
<p><img src="./pic/latest-llm-model-fine-tune-3epoch.png" alt=""></p>
<h3 id="_6epoch训练后效果" tabindex="-1">6epoch训练后效果 <a class="header-anchor" href="#_6epoch训练后效果" aria-label="Permalink to &quot;6epoch训练后效果&quot;">&ZeroWidthSpace;</a></h3>
<p><img src="./pic/latest-llm-model-fine-tune-6epoch.png" alt=""></p>
<p><img src="./pic/latest-llm-model-fine-tune-6epoch-chat.png" alt="">
可见, 在80条身份数据的情况下6个epoch, 学习率1e-4 , lora rank为4的情况下,  其余默认, 已经让模型能够重新定义模型的“自我身份”. 说明微调起作用了. 之后也简单问了一下常规的问题, 以检查是否造成了灾难性遗忘:
<img src="./pic/latest-llm-model-fine-tune-6epoch-try.png" alt="">
发现还可以, 之前用ptuning 对chatglm进行微调的时候 ,就出现了很明显的灾难性遗忘, 原来的功能都丧失了. 虽然ptuninig v2 也只对prefix encoder做微调.(也可能还是因为数据量不够, epoch过多)</p>
<h3 id="_10epoch训练效果" tabindex="-1">10epoch训练效果 <a class="header-anchor" href="#_10epoch训练效果" aria-label="Permalink to &quot;10epoch训练效果&quot;">&ZeroWidthSpace;</a></h3>
<p>10个epoch后, 就开始工作不正常了, 出现了. 数据量不够, 轮数太多, 过拟合了.
<img src="./pic/latest-llm-model-fine-tune-10epoch.png" alt=""></p>
<p><img src="./pic/iShot_2024-02-26_20.17.33.png" alt=""></p>
<h2 id="模型微调总结" tabindex="-1">模型微调总结 <a class="header-anchor" href="#模型微调总结" aria-label="Permalink to &quot;模型微调总结&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li>硬件要求高: 全参微调7b大概需要2个V100; lora训练7b,需要至少22G显存; qlora训练至少需要16G;</li>
<li>数据量要求高: 虽然可以使用过chatgpt进行问答的生成, 但是如果是<strong>垂直领域</strong>, 那回答也依然需要人工精确的去核对. 而垂直领域恰恰是希望能够非常准确, 才能突出此<strong>模型应用</strong>有别于其他的价值.</li>
</ul>
<p>所以目前微调技术会从SFT--&gt; PEFT发展(lora -&gt; qlora). 往着降低成本, 减少微调时间, 加速实验,加速产出的方向走. 期待低成本微调有更大的技术突破, 或者显卡硬件价格下降. 😃</p>
<p>最后, 虽然但是, 无论是SFT还是PEFT, 模型微调依然是给模型赋予新功能绕不开的问题. 比如为6b版本的模型也赋予工具调用能力.下面的 llama factory的agent微调例子就很实用.</p>
<blockquote>
<p><a href="https://www.google.com/url?sa=t&amp;rct=j&amp;q=&amp;esrc=s&amp;source=web&amp;cd=&amp;cad=rja&amp;uact=8&amp;ved=2ahUKEwjG6PXh4MaEAxUhlK8BHSTHDkUQFnoECAYQAQ&amp;url=https%3A%2F%2Farxiv.org%2Fabs%2F2305.14314&amp;usg=AOvVaw0DPZGS_zRJAyr-clb7RXRc&amp;opi=89978449" target="_blank" rel="noreferrer">QLoRA: Efficient Finetuning of Quantized LLMs</a>
<a href="https://zhuanlan.zhihu.com/p/678989191?utm_medium=social&amp;utm_oi=63143405420544&amp;utm_psn=1735115630280503296&amp;utm_source=ZHShareTargetIDMore" target="_blank" rel="noreferrer">单卡 3 小时训练专属大模型 Agent：基于 LLaMA Factory 实战 - 知乎 (zhihu.com)</a></p>
</blockquote>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Ollama本地推理&文本标题生成]]></title>
            <link>localhost/blog/blog/posts/2024/Ollama_Local_Inference&amp;Summary_Generation_Capability.html</link>
            <guid>localhost/blog/blog/posts/2024/Ollama_Local_Inference&amp;Summary_Generation_Capability.html</guid>
            <pubDate>Sat, 17 Feb 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[<h2 id="引言" tabindex="-1">引言 <a class="header-anchor" href="#引言" aria-label="Permalink to &quot;引言&quot;">&ZeroWidthSpace;</a></h2>
<p>前段时间编写了“闪念胶囊”的ios快捷指令脚本,功能是方便我随时通过敲击手机快速记录自己的灵感, 然后写入到icloud的obsidian灵感笔记区中.这样灵感就可以手机和电脑都同步了.<br>
但是当时记录的灵感为了快速为主, 所以markdown文件的标题都是时间戳, 这样会带来一个问题, 那就是哪怕同步到了电脑上, 用电脑浏览的时候,未点开前也是一连串的时间序列, 不能方便的进行灵感的整理和归档,这不是我想要的效果.<br>
所以就需要一个<strong>自动生成标题</strong>的功能.</p>
]]></description>
            <content:encoded><![CDATA[<h2 id="引言" tabindex="-1">引言 <a class="header-anchor" href="#引言" aria-label="Permalink to &quot;引言&quot;">&ZeroWidthSpace;</a></h2>
<p>前段时间编写了“闪念胶囊”的ios快捷指令脚本,功能是方便我随时通过敲击手机快速记录自己的灵感, 然后写入到icloud的obsidian灵感笔记区中.这样灵感就可以手机和电脑都同步了.<br>
但是当时记录的灵感为了快速为主, 所以markdown文件的标题都是时间戳, 这样会带来一个问题, 那就是哪怕同步到了电脑上, 用电脑浏览的时候,未点开前也是一连串的时间序列, 不能方便的进行灵感的整理和归档,这不是我想要的效果.<br>
所以就需要一个<strong>自动生成标题</strong>的功能.</p>
<hr>
<h2 id="需求分析" tabindex="-1">需求分析 <a class="header-anchor" href="#需求分析" aria-label="Permalink to &quot;需求分析&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="直接闪念的时候就输入标题" tabindex="-1"><s>直接闪念的时候就输入标题</s> <a class="header-anchor" href="#直接闪念的时候就输入标题" aria-label="Permalink to &quot;~~直接闪念的时候就输入标题~~&quot;">&ZeroWidthSpace;</a></h3>
<p>闪念的时候, 还要费脑子总结概括, 这样容易让灵感飘走, 虽然也算能消灭掉这个需求, 但是场景上给“用户“增加了使用成本, 让记录灵感变得更难受, 不自然, 不舒服, 那久而久之就不想用这种途径记录灵感了.  这样的产品自己都不会想用😟</p>
<h3 id="后期生成标题" tabindex="-1">后期生成标题 <a class="header-anchor" href="#后期生成标题" aria-label="Permalink to &quot;后期生成标题&quot;">&ZeroWidthSpace;</a></h3>
<p>所以“闪念胶囊”记录的灵感, 最终还是决定采用后期再生成的方案, 毕竟自己突然冒出来的灵感, 确实自己也不一定能总结好.类似数仓的分层,  ods层输入的时候,就不应该有太多的主题的约束和限制. 所以后期再生成是比较适合这个场景的</p>
<h2 id="方案调研" tabindex="-1">方案调研 <a class="header-anchor" href="#方案调研" aria-label="Permalink to &quot;方案调研&quot;">&ZeroWidthSpace;</a></h2>
<p>文章摘要/标题生成nlp中有好几种方案, 有需要自己微调的方案, 有不需要微调的方案.</p>
<p><strong>微调方案</strong>:<br>
简单的如微调bert-base-chinese模型, 以用来微调成解决一些具体的文本任务如, 分类, 概括摘要,<br>
文章摘,命名实体识别, 关系抽取等.<br>
对bert微调的好处就是, bert相较于现在的大模型, 运行资源小一些. 但是微调的成本依然不低. 还需要准备足够的数据进行训练.</p>
<p><strong>不用微调的方案</strong>:<br>
目前的开源llm大模型大多已经对这些常用的自然语言任务做了指令的微调. 所以, 已经可以直接拿来用了. 对于做文本摘要生成/标题生成, 这个任务. 所需要的参数量不用太大就可以完成. 并且出于个人隐私的考虑(灵感很隐私的), 并且一般灵感的文本长度不会太长(杀鸡焉用牛刀),所以最终我是采用了本地运行开源llm模型的来实现这个功能.</p>
<p>此处最终采用了本地部署运行模型推理的方法, 由于是mac系统, 所以我使用<a href="https://github.com/ollama/ollama" target="_blank" rel="noreferrer">ollama</a> 来本地运行模型, 确实很方便够用.</p>
<h2 id="模型选择" tabindex="-1">模型选择 <a class="header-anchor" href="#模型选择" aria-label="Permalink to &quot;模型选择&quot;">&ZeroWidthSpace;</a></h2>
<p>ollama主流的效果比较好的开源llm模型基本都有, 默认是llama2. 本地主要是中文, 所以我对比了qwen(阿里千问), llama2-chinses, mistral 等7b参数量以内的中文模型, ollama也支持运行自定义模型, 我这边经过测试, 发现qwen 4b / 7b 对于概括中文文本, 能力已经足够.</p>
<div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #FFCB6B">ollama</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">pull</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">qwen:4b</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic"># 拉取所需要的模型</span></span>
<span class="line"><span style="color: #FFCB6B">ollama</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">pull</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">qwen:7b</span></span></code></pre>
</div><p>ollama是以服务的形式运行, 所以调用起来也很灵活, 也支持流式调用.</p>
<div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #A6ACCD">data </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">model</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">qwen:7b</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">prompt</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> prompt</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">stream</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">False</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">    response </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> requests</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">post</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">url</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">data</span><span style="color: #89DDFF">=</span><span style="color: #82AAFF">json</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">dumps</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">data</span><span style="color: #89DDFF">),</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">stream</span><span style="color: #89DDFF">=True,</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">headers</span><span style="color: #89DDFF">={</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Content-type</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">application/json</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">})</span></span>
<span class="line"><span style="color: #A6ACCD">json</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">loads</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">response</span><span style="color: #89DDFF">.</span><span style="color: #F07178">text</span><span style="color: #89DDFF">)</span></span></code></pre>
</div><p>我这儿经过了对比7b的效果略好于4b, 但是速度上参数量小的推理会快一些.  测试过程中也遇到了大语言模型问答时会出现的一个很有意思的问题,  就是大语言模型在完成指定任务的时候, 很容易受到下文文中<code>指令</code>的干扰.
比如:</p>
<div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #A6ACCD">prompt </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color: #C3E88D">请帮我把下文概括成标题:</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color: #C3E88D">我的需求是这样的, 比如一个文件夹下有很多的文章, A文标题叫做“10大科技公司”, 然后A文章正文 提到了“小米公司”, 然后B文章标题是“小米公司简介”, 然后我希望能够自动识别并且产生B文章应该 属于A文章的关系. 类似这种关系解析, ,产生关系图的需求, 我应该怎么做</span></span>
<span class="line"><span style="color: #89DDFF">&quot;&quot;&quot;</span></span></code></pre>
</div><p>类似这种任务, 有点像是sql注入. 很容易会让大语言模型开始对<code>我该怎么做</code> 做回答,忘记了前文的让他生成标题的任务. 这个promp我试了很多个模型, 包括gpt4也会有<strong>命令混淆</strong>或<strong>指令覆盖</strong>这样的情况.</p>
<p><strong>命令混淆</strong>或<strong>指令覆盖</strong>解决方案:</p>
<ul>
<li>用特定的结构/格式包裹 <code>待处理文本</code> (参数量大一些的语言模型, 基本加上这一步就没问题了)</li>
<li>以特定的语言格式对模型进行微调(如固定以###system,   ###user 某种格式进行微调)</li>
<li>结尾再次强调任务(参数量小的模型, 加上这个就还可以, 解决了qwen4b没法处理的情况)</li>
</ul>
<p>经过测试, 发现用特定格式和结尾强调的prompt的形式, 一个qwen 4b 7b就可以正常的使用了. 而qwen小于4b的模型测试后, 效果也不太行,  这种情况就是模型能力的问题. 最终采用了qwen4b的方案来做这个功能.</p>
<p>调整后的prompt:</p>
<div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #A6ACCD">output_prompt </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">f</span><span style="color: #C3E88D">&quot;&quot;&quot;     </span></span>
<span class="line"><span style="color: #C3E88D">    ```</span></span>
<span class="line"><span style="color: #C3E88D">    </span><span style="color: #F78C6C">{</span><span style="color: #A6ACCD">prompt</span><span style="color: #F78C6C">}</span></span>
<span class="line"><span style="color: #C3E88D">    ```</span></span>
<span class="line"><span style="color: #C3E88D">    </span></span>
<span class="line"><span style="color: #C3E88D">    概括上文, 直接生成标题给我：</span></span>
<span class="line"><span style="color: #C3E88D">    &quot;&quot;&quot;</span></span></code></pre>
</div><h2 id="组合进obsidian" tabindex="-1">组合进obsidian <a class="header-anchor" href="#组合进obsidian" aria-label="Permalink to &quot;组合进obsidian&quot;">&ZeroWidthSpace;</a></h2>
<p>之前我写的快捷指令就是通过把文本写入到icloud的obsidian特定文件夹, 起到同步的作用. 所以我只需要再电脑上写一个脚本定期扫描我存放灵感的文件夹, 遇到就生成新的标题就可以完成这个任务.</p>
<p>obsidian安装<code>shell commands</code>插件, 然后配置好python轮训脚本即可.
auto_generate_title.py</p>
<div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> os</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> requests</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> tqdm </span><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> tqdm</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> json</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">url </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">http://localhost:11434/api/generate</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">def</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">combine_prompt</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">prompt</span><span style="color: #89DDFF">):</span></span>
<span class="line"><span style="color: #A6ACCD">    prompt </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> prompt</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">replace</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">&quot;&quot;</span><span style="color: #89DDFF">).</span><span style="color: #82AAFF">replace</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">&quot;</span><span style="color: #A6ACCD">\n</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">&quot;&quot;</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">    output_prompt </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">f</span><span style="color: #C3E88D">&quot;&quot;&quot;     </span></span>
<span class="line"><span style="color: #C3E88D">    ```</span></span>
<span class="line"><span style="color: #C3E88D">    </span><span style="color: #F78C6C">{</span><span style="color: #A6ACCD">prompt</span><span style="color: #F78C6C">}</span></span>
<span class="line"><span style="color: #C3E88D">    ```</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C3E88D">    概括上文, 直接生成标题给我：</span></span>
<span class="line"><span style="color: #C3E88D">    &quot;&quot;&quot;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #A6ACCD"> output_prompt</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">def</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">make_title</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">prompt</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD; font-style: italic">data</span><span style="color: #89DDFF">=None):</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #A6ACCD"> data </span><span style="color: #89DDFF">is</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">None:</span></span>
<span class="line"><span style="color: #A6ACCD">        data </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">model</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">qwen:7b</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">prompt</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> prompt</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">stream</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">False</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">    response </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> requests</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">post</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">url</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">data</span><span style="color: #89DDFF">=</span><span style="color: #82AAFF">json</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">dumps</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">data</span><span style="color: #89DDFF">),</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">stream</span><span style="color: #89DDFF">=True,</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">headers</span><span style="color: #89DDFF">={</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Content-type</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">application/json</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">})</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #A6ACCD"> json</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">loads</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">response</span><span style="color: #89DDFF">.</span><span style="color: #F07178">text</span><span style="color: #89DDFF">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">def</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">clean_content</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">content</span><span style="color: #89DDFF">):</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #A6ACCD"> content</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">strip</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">&quot;</span><span style="color: #A6ACCD">\n</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">).</span><span style="color: #82AAFF">strip</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">&quot;</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">).</span><span style="color: #82AAFF">replace</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">&quot;&quot;</span><span style="color: #89DDFF">).</span><span style="color: #82AAFF">replace</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">/</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">&quot;&quot;</span><span style="color: #89DDFF">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> time</span></span>
<span class="line"><span style="color: #676E95; font-style: italic"># 遍历轮询新文件</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">while</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">True:</span></span>
<span class="line"><span style="color: #A6ACCD">    dir_path </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">./00灵感</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"><span style="color: #A6ACCD">    need_rename </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">[</span><span style="color: #A6ACCD">i </span><span style="color: #89DDFF; font-style: italic">for</span><span style="color: #A6ACCD"> i </span><span style="color: #89DDFF; font-style: italic">in</span><span style="color: #A6ACCD"> os</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">listdir</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">dir_path</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #A6ACCD"> i</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">find</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">.md</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">!=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">-</span><span style="color: #F78C6C">1</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">and</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">len</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">i</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">split</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">))</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">==</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">2</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">f</span><span style="color: #C3E88D">&quot;需要处理: </span><span style="color: #F78C6C">{</span><span style="color: #82AAFF">len</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">need_rename</span><span style="color: #89DDFF">)</span><span style="color: #F78C6C">}</span><span style="color: #C3E88D">&quot;</span><span style="color: #89DDFF">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF; font-style: italic">for</span><span style="color: #A6ACCD"> i </span><span style="color: #89DDFF; font-style: italic">in</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">tqdm</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">need_rename</span><span style="color: #89DDFF">):</span></span>
<span class="line"><span style="color: #A6ACCD">        ori_filename </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> i</span></span>
<span class="line"><span style="color: #A6ACCD">        ori_path </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> os</span><span style="color: #89DDFF">.</span><span style="color: #F07178">path</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">join</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">dir_path</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> i</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #89DDFF; font-style: italic">with</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">open</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">ori_path</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">as</span><span style="color: #A6ACCD"> file</span><span style="color: #89DDFF">:</span></span>
<span class="line"><span style="color: #A6ACCD">            content </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> file</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">read</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #A6ACCD">        </span></span>
<span class="line"><span style="color: #A6ACCD">        clean_prompt </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">clean_content</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">content</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">        temp </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">combine_prompt</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">clean_prompt</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">    </span></span>
<span class="line"><span style="color: #A6ACCD">        json_content </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">make_title</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">temp</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">        clean_text </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">clean_content</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">json_content</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">get</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">response</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">))</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">        new_filename </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> clean_text </span><span style="color: #89DDFF">+</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">+</span><span style="color: #A6ACCD"> ori_filename</span></span>
<span class="line"><span style="color: #A6ACCD">        new_path </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> os</span><span style="color: #89DDFF">.</span><span style="color: #F07178">path</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">join</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">dir_path</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> new_filename</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">        os</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">rename</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">ori_path</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> new_path</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">休眠中</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">    time</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">sleep</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">60</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic"># 1 min scan</span></span></code></pre>
</div><h2 id="效果展示" tabindex="-1">效果展示 <a class="header-anchor" href="#效果展示" aria-label="Permalink to &quot;效果展示&quot;">&ZeroWidthSpace;</a></h2>
<p>下图为生成后的灵感文本的效果展示:<br>
时间戳形式的灵感文件有了标题, 这样管理起来和后期回看就很方便了.
<img src="./pic/本地部署&amp;生成标题.png" alt=""></p>
<h2 id="总结思考" tabindex="-1">总结思考 <a class="header-anchor" href="#总结思考" aria-label="Permalink to &quot;总结思考&quot;">&ZeroWidthSpace;</a></h2>
<p>如果是业务上类似的需求是要对模型做微调为好, 并且应该进行模型的量化和部署操作, 这样可以尽可能的优化速度和减少资源的占用.</p>
<p>ollama作为客户端的, 本身也是用的量化后或者gguf格式的模型, 有一定的加速, 但是目前推理速度还是太慢了, 期待以后小模型或者硬件成本能够进一步降低, 这样大家都可以很方便的把ai整合入自己生活习惯中去.</p>
<p>后期的笔记文档管理的想法:
结合nlp的话, 后期还希望能够自动的对我的文档进行分析, 并且创建好他们之间的关系, 自动帮我把他们之间的逻辑关系创建好. 这样记录后,电脑整理, 我回看就可以了, 头脑风暴或者是后续的笔记记录自动产生新的联系就很好了. 可能需要生成主题词(三元组), 然后方便进行自动归档和建立联系. 建立图结构的联系.</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[以撒道具/饰品图像识别]]></title>
            <link>localhost/blog/blog/posts/2024/Isaac_image_recognition.html</link>
            <guid>localhost/blog/blog/posts/2024/Isaac_image_recognition.html</guid>
            <pubDate>Mon, 29 Jan 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[<h1 id="引言" tabindex="-1">引言 <a class="header-anchor" href="#引言" aria-label="Permalink to &quot;引言&quot;">&ZeroWidthSpace;</a></h1>
<p><img src="./pic/自定义训练数据图像识别-2024-01-29.png" alt="">
最近在玩《以撒的结合:忏悔》, ns版本. 游戏确实上头好玩, 内容很多. 但是游玩下来遇到一个纠结头疼的问题就是, 道具/ 装备 有时候捡起来后的效果, 还不如不捡. 装备/道具只会在捡起来的时候才能看到道具和状态是什么, 甚至, 有时候捡起来后描述也看不出这个道具到底能用来干嘛,  魂系叙事那一套......虽然也找到不错的<a href="https://isaac.huijiwiki.com/wiki/%E9%A6%96%E9%A1%B5" target="_blank" rel="noreferrer">以撒的结合中文维基</a>, 但是, 站点只能文字搜索, 再加上其道具和饰品加起来总数量有900多个, 相当于ImageNet的种类了.
于是就想到, 干脆做一个<strong>以撒道具图像识别功能</strong> 好了, 优化体验: ) .</p>
]]></description>
            <content:encoded><![CDATA[<h1 id="引言" tabindex="-1">引言 <a class="header-anchor" href="#引言" aria-label="Permalink to &quot;引言&quot;">&ZeroWidthSpace;</a></h1>
<p><img src="./pic/自定义训练数据图像识别-2024-01-29.png" alt="">
最近在玩《以撒的结合:忏悔》, ns版本. 游戏确实上头好玩, 内容很多. 但是游玩下来遇到一个纠结头疼的问题就是, 道具/ 装备 有时候捡起来后的效果, 还不如不捡. 装备/道具只会在捡起来的时候才能看到道具和状态是什么, 甚至, 有时候捡起来后描述也看不出这个道具到底能用来干嘛,  魂系叙事那一套......虽然也找到不错的<a href="https://isaac.huijiwiki.com/wiki/%E9%A6%96%E9%A1%B5" target="_blank" rel="noreferrer">以撒的结合中文维基</a>, 但是, 站点只能文字搜索, 再加上其道具和饰品加起来总数量有900多个, 相当于ImageNet的种类了.
于是就想到, 干脆做一个<strong>以撒道具图像识别功能</strong> 好了, 优化体验: ) .</p>
<hr>
<BabyPulm /><h1 id="自定义训练数据图像识别" tabindex="-1">自定义训练数据图像识别 <a class="header-anchor" href="#自定义训练数据图像识别" aria-label="Permalink to &quot;自定义训练数据图像识别&quot;">&ZeroWidthSpace;</a></h1>
<p>得益于各种深度学习框架的发展, 现在训练一个模型变得非常简单, 于是我就决定直接用<code>pytorch</code>来完成这个图片识别的任务了.  考虑到以撒的道具装备这类东西图像数据是非常<strong>垂直领域</strong>了, 所以我需要准备对应的训练数据进行模型的训练.</p>
<h1 id="数据准备" tabindex="-1">数据准备 <a class="header-anchor" href="#数据准备" aria-label="Permalink to &quot;数据准备&quot;">&ZeroWidthSpace;</a></h1>
<h2 id="数据获取-数据合成" tabindex="-1">数据获取&amp;数据合成 <a class="header-anchor" href="#数据获取-数据合成" aria-label="Permalink to &quot;数据获取&amp;数据合成&quot;">&ZeroWidthSpace;</a></h2>
<p>从<a href="https://isaac.huijiwiki.com/wiki/%E9%A6%96%E9%A1%B5" target="_blank" rel="noreferrer">以撒的结合中文维基</a> 编写爬虫把道具/装备的图片数据, 描述都抓取下来.<br>
爬虫比较简单, 主要就是图片爬取的时候, 需要从css中把sprite图子图的x, y提取出来, 然后自行使用sprite划分独立的道具图. 下图为css和html标签中抽取出来的信息</p>
<div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">{</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">collectibles_001</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">x</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">32</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">y</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">en</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">The Sad Onion</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">zh</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">悲伤洋葱</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">level</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">1</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">type</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">道具</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">level2</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">3</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">?</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">/</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">desc</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">射速上升。</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">new_id</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">image</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">./cus_data/0.png</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">},</span><span style="color: #A6ACCD"> ...</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic"># 提取出每个道具的图片和其他属性</span></span></code></pre>
</div><p>然后把图片分割后某个目录, 此处我是把裁切好的图片存放在 <code>./cus_data</code>下. 并且把图片. 整理后得到训练的类别标签备用.</p>
<div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">&gt;&gt;&gt;</span><span style="color: #A6ACCD">classes</span></span>
<span class="line"><span style="color: #89DDFF">{</span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">悲伤洋葱:射速上升。</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">内眼:角色每次发射3颗泪弹。</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">2</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">弯勺魔术:角色的泪弹获得追踪效果。</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">3</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">柯吉猫的头:泪弹变大，击退效果上升，伤害上升。</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">4</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">我的镜像:角色的泪弹会飞回角色身边。</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">5</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">小号:射程下降，射速上升。</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD"> ...</span></span></code></pre>
</div><p>此处我把图片裁剪下来的32x32大小的图片保存为合成训练数据的元数据, 因为是像素风格, 所以哪怕所缩小了,只要不使用平滑, 那还是非常清晰的.
<img src="./pic/自定义训练数据图像识别-像素风格-2024-01-29.png" alt=""><br>
(数据获得和处理完整代码在末尾的引用中会给出链接.)</p>
<h2 id="数据增强" tabindex="-1">数据增强 <a class="header-anchor" href="#数据增强" aria-label="Permalink to &quot;数据增强&quot;">&ZeroWidthSpace;</a></h2>
<p>实际的预测情况都伴随着各种各样的背景干扰,  所以这边需要在合成训练数据的时候, 也需要让这些元图标拥有各种各样的背景.
<img src="./pic/自定义训练数据图像识别-数据合成多背景-2024-01-29.png" alt="">
另一方面, 考虑到一个场景就是使用摄像头的拍照的时候, 可能会有的一些图像的畸变和变形等. transform中也需要配置数据增强的操作, 包括但不限于, 抖动, 明暗度变化等.</p>
<div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> torchvision</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">transforms </span><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> ToTensor</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">transform </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> transforms</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Compose</span><span style="color: #89DDFF">(</span></span>
<span class="line"><span style="color: #82AAFF">    </span><span style="color: #89DDFF">[</span></span>
<span class="line"><span style="color: #82AAFF">        transforms</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Lambda</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">lambda</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">x</span><span style="color: #89DDFF">:</span><span style="color: #82AAFF"> x</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">float</span><span style="color: #89DDFF">()),</span></span>
<span class="line"><span style="color: #82AAFF">    </span><span style="color: #89DDFF">])</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic"># 先直接配置一个用来计算 数据均值和标准差,以方便正则化</span></span>
<span class="line"></span>
<span class="line"><span style="color: #676E95; font-style: italic"># 配置初始的dataloader用于遍历和计算均值和标准差</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> torchvision</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">io </span><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> read_image</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">class</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">IssacCustomDatasets</span><span style="color: #89DDFF">(</span><span style="color: #FFCB6B">Dataset</span><span style="color: #89DDFF">):</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #C792EA">def</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">__init__</span><span style="color: #89DDFF">(</span><span style="color: #F07178; font-style: italic">self</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD; font-style: italic">img_sort_files</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span></span>
<span class="line"><span style="color: #A6ACCD">                 </span><span style="color: #A6ACCD; font-style: italic">img_dir</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD; font-style: italic">transform</span><span style="color: #89DDFF">=None,</span><span style="color: #A6ACCD"> </span></span>
<span class="line"><span style="color: #A6ACCD">                </span><span style="color: #A6ACCD; font-style: italic">target_transform</span><span style="color: #89DDFF">=None):</span></span>
<span class="line"><span style="color: #A6ACCD">        self</span><span style="color: #89DDFF">.</span><span style="color: #F07178">img_labels</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> img_sort_files</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #676E95; font-style: italic"># 自定义标签关系, 此处需要排好序的</span></span>
<span class="line"><span style="color: #A6ACCD">        self</span><span style="color: #89DDFF">.</span><span style="color: #F07178">img_dir</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> img_dir</span></span>
<span class="line"><span style="color: #A6ACCD">        self</span><span style="color: #89DDFF">.</span><span style="color: #F07178">transform</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> transform</span></span>
<span class="line"><span style="color: #A6ACCD">        self</span><span style="color: #89DDFF">.</span><span style="color: #F07178">target_transform</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> target_transform</span></span>
<span class="line"><span style="color: #A6ACCD">        </span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #C792EA">def</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">__len__</span><span style="color: #89DDFF">(</span><span style="color: #F07178; font-style: italic">self</span><span style="color: #89DDFF">):</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">len</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">self</span><span style="color: #89DDFF">.</span><span style="color: #F07178">img_labels</span><span style="color: #89DDFF">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #C792EA">def</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">__getitem__</span><span style="color: #89DDFF">(</span><span style="color: #F07178; font-style: italic">self</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD; font-style: italic">idx</span><span style="color: #89DDFF">):</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic"># 作用是获得label 和 item 即可</span></span>
<span class="line"><span style="color: #A6ACCD">        filename </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> self</span><span style="color: #89DDFF">.</span><span style="color: #F07178">img_labels</span><span style="color: #89DDFF">[</span><span style="color: #F07178">idx</span><span style="color: #89DDFF">]</span><span style="color: #A6ACCD">        </span></span>
<span class="line"><span style="color: #A6ACCD">        img_path </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> os</span><span style="color: #89DDFF">.</span><span style="color: #F07178">path</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">join</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">self</span><span style="color: #89DDFF">.</span><span style="color: #F07178">img_dir</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> filename</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">        image </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">read_image</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">img_path</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">mode</span><span style="color: #89DDFF">=</span><span style="color: #82AAFF">torchvision</span><span style="color: #89DDFF">.</span><span style="color: #F07178">io</span><span style="color: #89DDFF">.</span><span style="color: #F07178">image</span><span style="color: #89DDFF">.</span><span style="color: #F07178">ImageReadMode</span><span style="color: #89DDFF">.</span><span style="color: #F07178">RGB</span><span style="color: #89DDFF">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">        label </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">int</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">filename</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">split</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">.</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">)[</span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">])</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #A6ACCD"> self</span><span style="color: #89DDFF">.</span><span style="color: #F07178">transform</span><span style="color: #89DDFF">:</span></span>
<span class="line"><span style="color: #A6ACCD">            image </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> self</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">transform</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">image</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #A6ACCD"> self</span><span style="color: #89DDFF">.</span><span style="color: #F07178">target_transform</span><span style="color: #89DDFF">:</span></span>
<span class="line"><span style="color: #A6ACCD">            label </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> self</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">target_transform</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">label</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #A6ACCD"> image</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> label</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">from_dir </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">new_cus_data</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"><span style="color: #A6ACCD">need_move_images </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> os</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">listdir</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">new_cus_data/</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">need_move_images </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">[</span><span style="color: #A6ACCD">i </span><span style="color: #89DDFF; font-style: italic">for</span><span style="color: #A6ACCD"> i </span><span style="color: #89DDFF; font-style: italic">in</span><span style="color: #A6ACCD"> need_move_images </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">int</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">i</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">split</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">.</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">)[</span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">])</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #A6ACCD">need_move_images</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">sort</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">key</span><span style="color: #89DDFF">=</span><span style="color: #C792EA">lambda</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">x</span><span style="color: #89DDFF">:</span><span style="color: #82AAFF"> </span><span style="color: #C792EA">f</span><span style="color: #C3E88D">&quot;</span><span style="color: #F78C6C">{</span><span style="color: #FFCB6B">int</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">x</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">split</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">.</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">)[</span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">])</span><span style="color: #C792EA">:03d</span><span style="color: #F78C6C">}</span><span style="color: #C3E88D">&quot;</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">+</span><span style="color: #82AAFF"> </span><span style="color: #C792EA">f</span><span style="color: #C3E88D">&quot;</span><span style="color: #F78C6C">{</span><span style="color: #82AAFF">x</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">split</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">.</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">)[</span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">]</span><span style="color: #F78C6C">}</span><span style="color: #C3E88D">&quot;</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">len</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">need_move_images</span><span style="color: #89DDFF">))</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">train_dataset </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">IssacCustomDatasets</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">img_sort_files</span><span style="color: #89DDFF">=</span><span style="color: #82AAFF">need_move_images</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">img_dir</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">new_cus_data/</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #82AAFF">                                    </span><span style="color: #A6ACCD; font-style: italic">transform</span><span style="color: #89DDFF">=</span><span style="color: #82AAFF">transform</span><span style="color: #89DDFF">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #676E95; font-style: italic">## dataloader</span></span>
<span class="line"><span style="color: #A6ACCD">train_dataloader </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">DataLoader</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">train_dataset</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span></span>
<span class="line"><span style="color: #82AAFF">                              </span><span style="color: #A6ACCD; font-style: italic">batch_size</span><span style="color: #89DDFF">=</span><span style="color: #82AAFF">batch_size</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span></span>
<span class="line"><span style="color: #82AAFF">                              </span><span style="color: #A6ACCD; font-style: italic">shuffle</span><span style="color: #89DDFF">=True)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #676E95; font-style: italic"># 获取图片数据的 归一化数值</span></span>
<span class="line"><span style="color: #A6ACCD">global_mean </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">[]</span></span>
<span class="line"><span style="color: #A6ACCD">global_std </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">[]</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">for</span><span style="color: #A6ACCD"> images</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> labels </span><span style="color: #89DDFF; font-style: italic">in</span><span style="color: #A6ACCD"> train_dataloader</span><span style="color: #89DDFF">:</span></span>
<span class="line"><span style="color: #A6ACCD">    numpy_image </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> images</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">numpy</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #A6ACCD">    batch_mean </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> np</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">mean</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">numpy_image</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">axis</span><span style="color: #89DDFF">=(</span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">,</span><span style="color: #F78C6C">2</span><span style="color: #89DDFF">,</span><span style="color: #F78C6C">3</span><span style="color: #89DDFF">))</span></span>
<span class="line"><span style="color: #A6ACCD">    batch_std </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> np</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">std</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">numpy_image</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">axis</span><span style="color: #89DDFF">=(</span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">,</span><span style="color: #F78C6C">2</span><span style="color: #89DDFF">,</span><span style="color: #F78C6C">3</span><span style="color: #89DDFF">))</span></span>
<span class="line"><span style="color: #A6ACCD">    global_mean</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">append</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">batch_mean</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">    global_std</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">append</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">batch_std</span><span style="color: #89DDFF">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">global_mean </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> np</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">mean</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">global_mean</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">axis</span><span style="color: #89DDFF">=</span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">).</span><span style="color: #82AAFF">tolist</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #A6ACCD">global_std </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> np</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">mean</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">global_std</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">axis</span><span style="color: #89DDFF">=</span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">).</span><span style="color: #82AAFF">tolist</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">global_mean</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">global_std</span><span style="color: #89DDFF">)</span></span></code></pre>
</div><p>再次根据得到的均值和标准差更新训练用的dataloader</p>
<div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> torchvision</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">transforms </span><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> ToTensor</span></span>
<span class="line"><span style="color: #A6ACCD">        </span></span>
<span class="line"><span style="color: #A6ACCD">transform </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> transforms</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Compose</span><span style="color: #89DDFF">(</span></span>
<span class="line"><span style="color: #82AAFF">    </span><span style="color: #89DDFF">[</span></span>
<span class="line"><span style="color: #82AAFF">        transforms</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">RandomAffine</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">degrees</span><span style="color: #89DDFF">=</span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">translate</span><span style="color: #89DDFF">=None,</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">scale</span><span style="color: #89DDFF">=(</span><span style="color: #F78C6C">0.9</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">1.1</span><span style="color: #89DDFF">),</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">shear</span><span style="color: #89DDFF">=None),</span><span style="color: #82AAFF">  </span></span>
<span class="line"><span style="color: #82AAFF">        </span><span style="color: #676E95; font-style: italic"># 随机放大或者缩小一点点</span></span>
<span class="line"><span style="color: #82AAFF">        </span><span style="color: #676E95; font-style: italic"># 增加噪声, 防止过拟合</span></span>
<span class="line"><span style="color: #82AAFF">        transforms</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">ColorJitter</span><span style="color: #89DDFF">(</span></span>
<span class="line"><span style="color: #82AAFF">            </span><span style="color: #A6ACCD; font-style: italic">brightness</span><span style="color: #89DDFF">=</span><span style="color: #F78C6C">0.1</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #82AAFF">            </span><span style="color: #A6ACCD; font-style: italic">contrast</span><span style="color: #89DDFF">=</span><span style="color: #F78C6C">0.1</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #82AAFF">            </span><span style="color: #A6ACCD; font-style: italic">saturation</span><span style="color: #89DDFF">=</span><span style="color: #F78C6C">0.1</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #82AAFF">            </span><span style="color: #A6ACCD; font-style: italic">hue</span><span style="color: #89DDFF">=</span><span style="color: #F78C6C">0.1</span><span style="color: #89DDFF">),</span><span style="color: #82AAFF">  </span><span style="color: #676E95; font-style: italic"># 抖动图像的亮度、对比度、饱和度和色相</span></span>
<span class="line"><span style="color: #82AAFF">        transforms</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Lambda</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">lambda</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">x</span><span style="color: #89DDFF">:</span><span style="color: #82AAFF"> x</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">float</span><span style="color: #89DDFF">()),</span></span>
<span class="line"><span style="color: #82AAFF">        transforms</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Normalize</span><span style="color: #89DDFF">(</span></span>
<span class="line"><span style="color: #82AAFF">            global_mean</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #82AAFF">            global_std</span></span>
<span class="line"><span style="color: #82AAFF">        </span><span style="color: #89DDFF">)</span><span style="color: #82AAFF">  </span><span style="color: #676E95; font-style: italic"># 对图片数据做正则化</span></span>
<span class="line"><span style="color: #82AAFF">    </span><span style="color: #89DDFF">])</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">train_dataset </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">IssacCustomDatasets</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">need_move_images</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">img_dir</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">new_cus_data/</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">transform</span><span style="color: #89DDFF">=</span><span style="color: #82AAFF">transform</span><span style="color: #89DDFF">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #676E95; font-style: italic">## dataloader</span></span>
<span class="line"><span style="color: #A6ACCD">train_dataloader </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">DataLoader</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">train_dataset</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span></span>
<span class="line"><span style="color: #82AAFF">                              </span><span style="color: #A6ACCD; font-style: italic">batch_size</span><span style="color: #89DDFF">=</span><span style="color: #82AAFF">batch_size</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span></span>
<span class="line"><span style="color: #82AAFF">                              </span><span style="color: #A6ACCD; font-style: italic">shuffle</span><span style="color: #89DDFF">=True)</span></span></code></pre>
</div><h1 id="训练模型" tabindex="-1">训练模型 <a class="header-anchor" href="#训练模型" aria-label="Permalink to &quot;训练模型&quot;">&ZeroWidthSpace;</a></h1>
<h2 id="自定义模型" tabindex="-1">自定义模型 <a class="header-anchor" href="#自定义模型" aria-label="Permalink to &quot;自定义模型&quot;">&ZeroWidthSpace;</a></h2>
<p>因为图片识别任务输入的图片比较简单, 所以我这儿直接用vgg16来训练一个小模型就可以了. 原版的vgg16是基于244x244的ImageNet的图片输入, 此处我通过继承调整了池化层的7x7的特征图的输入, 以让他支持32x32的输入还有最后的全连接层的输出.</p>
<div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> torch</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> torch </span><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> nn</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> torchvision</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">models </span><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> vgg16</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> torch</span><span style="color: #89DDFF">.</span><span style="color: #F07178">optim</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">as</span><span style="color: #A6ACCD"> optim</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> numpy </span><span style="color: #89DDFF; font-style: italic">as</span><span style="color: #A6ACCD"> np</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">device </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">(</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">cuda</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #A6ACCD"> torch</span><span style="color: #89DDFF">.</span><span style="color: #F07178">cuda</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">is_available</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF; font-style: italic">else</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">mps</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #A6ACCD"> torch</span><span style="color: #89DDFF">.</span><span style="color: #F07178">backends</span><span style="color: #89DDFF">.</span><span style="color: #F07178">mps</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">is_available</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF; font-style: italic">else</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">cpu</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">f</span><span style="color: #C3E88D">&quot;Using </span><span style="color: #F78C6C">{</span><span style="color: #82AAFF">device</span><span style="color: #F78C6C">}</span><span style="color: #C3E88D"> device&quot;</span><span style="color: #89DDFF">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">total_classes </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">list</span><span style="color: #89DDFF">(</span><span style="color: #FFCB6B">set</span><span style="color: #89DDFF">([</span><span style="color: #82AAFF">i</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">split</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">.</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">)[</span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">]</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF; font-style: italic">for</span><span style="color: #82AAFF"> i </span><span style="color: #89DDFF; font-style: italic">in</span><span style="color: #82AAFF"> need_move_images</span><span style="color: #89DDFF">]))</span></span>
<span class="line"><span style="color: #A6ACCD">total_classes_num </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">len</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">total_classes</span><span style="color: #89DDFF">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #676E95; font-style: italic">## 大批量测试</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> matplotlib </span><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> pyplot </span><span style="color: #89DDFF; font-style: italic">as</span><span style="color: #A6ACCD"> plt</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> torchvision</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">utils </span><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> make_grid</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">class</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">VGG16_S</span><span style="color: #89DDFF">(</span><span style="color: #FFCB6B">nn</span><span style="color: #89DDFF">.</span><span style="color: #FFCB6B">Module</span><span style="color: #89DDFF">):</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #C792EA">def</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">__init__</span><span style="color: #89DDFF">(</span><span style="color: #F07178; font-style: italic">self</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD; font-style: italic">num_classes</span><span style="color: #89DDFF">):</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #FFCB6B">super</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">VGG16_S</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD">self</span><span style="color: #89DDFF">).</span><span style="color: #82AAFF">__init__</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #A6ACCD">        model </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">vgg16</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">pretrained</span><span style="color: #89DDFF">=True)</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic"># 可以选择False 和True </span></span>
<span class="line"><span style="color: #A6ACCD">        self</span><span style="color: #89DDFF">.</span><span style="color: #F07178">features</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> model</span><span style="color: #89DDFF">.</span><span style="color: #F07178">features</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic"># 只取了feature</span></span>
<span class="line"><span style="color: #A6ACCD">        self</span><span style="color: #89DDFF">.</span><span style="color: #F07178">classifier</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> nn</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Sequential</span><span style="color: #89DDFF">(</span></span>
<span class="line"><span style="color: #82AAFF">            nn</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Linear</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">512</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">*</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">1</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">*</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">4096</span><span style="color: #89DDFF">),</span><span style="color: #82AAFF">  </span><span style="color: #676E95; font-style: italic"># 修改此处的第一个参数用来适配64*64</span></span>
<span class="line"><span style="color: #82AAFF">            nn</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">ReLU</span><span style="color: #89DDFF">(True),</span></span>
<span class="line"><span style="color: #82AAFF">            nn</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Dropout</span><span style="color: #89DDFF">(),</span></span>
<span class="line"><span style="color: #82AAFF">            nn</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Linear</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">4096</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">4096</span><span style="color: #89DDFF">),</span></span>
<span class="line"><span style="color: #82AAFF">            nn</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">ReLU</span><span style="color: #89DDFF">(True),</span></span>
<span class="line"><span style="color: #82AAFF">            nn</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Dropout</span><span style="color: #89DDFF">(),</span></span>
<span class="line"><span style="color: #82AAFF">            nn</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Linear</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">4096</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> num_classes</span><span style="color: #89DDFF">),</span></span>
<span class="line"><span style="color: #82AAFF">        </span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">        </span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #C792EA">def</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">forward</span><span style="color: #89DDFF">(</span><span style="color: #F07178; font-style: italic">self</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD; font-style: italic">x</span><span style="color: #89DDFF">):</span></span>
<span class="line"><span style="color: #A6ACCD">        x </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> self</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">features</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">x</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">        x </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> x</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">view</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">x</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">size</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">),</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">-</span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span></span>
<span class="line"><span style="color: #A6ACCD">        x </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> self</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">classifier</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">x</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #A6ACCD"> x</span></span></code></pre>
</div><h2 id="训练识别模型" tabindex="-1">训练识别模型 <a class="header-anchor" href="#训练识别模型" aria-label="Permalink to &quot;训练识别模型&quot;">&ZeroWidthSpace;</a></h2>
<p>使用多个不同背景合成的训练数据和数据增强后, 我们获得了 10872 的总训练数据, 921个类. 然后就可以进行相关的训练了. (数据量实在不算太多, 所以偷懒直接回抽样训练数据验证好了)</p>
<div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">%%</span><span style="color: #A6ACCD">time</span></span>
<span class="line"><span style="color: #676E95; font-style: italic"># 训练模型</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">net </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">VGG16_S</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">num_classes</span><span style="color: #89DDFF">=</span><span style="color: #82AAFF">total_classes_num</span><span style="color: #89DDFF">).</span><span style="color: #82AAFF">to</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">device</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic"># 这次训练64 * 64的版本</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">criterion </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> nn</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">CrossEntropyLoss</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #A6ACCD">optimizer </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> optim</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Adam</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">net</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">parameters</span><span style="color: #89DDFF">(),</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">lr</span><span style="color: #89DDFF">=</span><span style="color: #F78C6C">0.0001</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">weight_decay</span><span style="color: #89DDFF">=</span><span style="color: #F78C6C">0.01</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic"># 加入了l2正则化</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">check_iter </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">10</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic"># train check batch size </span></span>
<span class="line"><span style="color: #A6ACCD">train_epoch </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">25</span></span>
<span class="line"><span style="color: #A6ACCD">prefix </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">f</span><span style="color: #C3E88D">&quot;20240128_full_32x32_clear_</span><span style="color: #F78C6C">{</span><span style="color: #A6ACCD">total_classes_num</span><span style="color: #F78C6C">}</span><span style="color: #C3E88D">class_l2_2-&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">batch_size</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> batch_size</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">for</span><span style="color: #A6ACCD"> epoch </span><span style="color: #89DDFF; font-style: italic">in</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">range</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">train_epoch</span><span style="color: #89DDFF">):</span></span>
<span class="line"><span style="color: #A6ACCD">    net</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">train</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic"># 每个epoch 后切换训练模式, 那么会不会保d留之前的训练权重呢?</span></span>
<span class="line"><span style="color: #A6ACCD">    </span></span>
<span class="line"><span style="color: #A6ACCD">    progress_bar </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">tqdm</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">enumerate</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">train_dataloader</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">),</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">total</span><span style="color: #89DDFF">=</span><span style="color: #82AAFF">len</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">train_dataloader</span><span style="color: #89DDFF">))</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF; font-style: italic">for</span><span style="color: #A6ACCD"> i</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> data </span><span style="color: #89DDFF; font-style: italic">in</span><span style="color: #A6ACCD"> progress_bar</span><span style="color: #89DDFF">:</span></span>
<span class="line"><span style="color: #A6ACCD">        inputs</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> labels </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> data  </span><span style="color: #676E95; font-style: italic"># 必须要float 归一化? 浮点类型.</span></span>
<span class="line"><span style="color: #A6ACCD">        inputs</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> labels </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> inputs</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">float</span><span style="color: #89DDFF">().</span><span style="color: #82AAFF">to</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">device</span><span style="color: #89DDFF">),</span><span style="color: #A6ACCD"> labels</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">to</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">device</span><span style="color: #89DDFF">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">        optimizer</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">zero_grad</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #A6ACCD">        outputs </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">net</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">inputs</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic"># 这一步, 运行有问题, 这是为什么呢, 检查一下图片格式</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">        loss </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">criterion</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">outputs</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> labels</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">        loss</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">backward</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #A6ACCD">        optimizer</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">step</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #A6ACCD">        progress_bar</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">set_description</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">f</span><span style="color: #C3E88D">&#39;epoch:</span><span style="color: #F78C6C">{</span><span style="color: #82AAFF">epoch</span><span style="color: #F78C6C">}</span><span style="color: #C3E88D">, loss: </span><span style="color: #F78C6C">{</span><span style="color: #82AAFF">loss </span><span style="color: #89DDFF">/</span><span style="color: #82AAFF"> batch_size</span><span style="color: #C792EA">:.3f</span><span style="color: #F78C6C">}</span><span style="color: #C3E88D">&#39;</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">    </span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #A6ACCD"> epoch </span><span style="color: #89DDFF">%</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">1</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">==</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic"># 每两个epoch进行一次验证</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">开始验证....</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">        net</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">eval</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #A6ACCD">        correct </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic"># 记录正确预测的数量</span></span>
<span class="line"><span style="color: #A6ACCD">        total </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic"># 总的样本数</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #89DDFF; font-style: italic">with</span><span style="color: #A6ACCD"> torch</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">no_grad</span><span style="color: #89DDFF">():</span></span>
<span class="line"><span style="color: #A6ACCD">            </span></span>
<span class="line"><span style="color: #A6ACCD">            progress_bar2 </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">tqdm</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">enumerate</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">train_dataloader</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">),</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">total</span><span style="color: #89DDFF">=</span><span style="color: #FFCB6B">int</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">len</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">train_dataloader</span><span style="color: #89DDFF">)</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">*</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">0.4</span><span style="color: #89DDFF">))</span></span>
<span class="line"><span style="color: #A6ACCD">            </span><span style="color: #89DDFF; font-style: italic">for</span><span style="color: #A6ACCD"> i</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> data </span><span style="color: #89DDFF; font-style: italic">in</span><span style="color: #A6ACCD"> progress_bar2</span><span style="color: #89DDFF">:</span></span>
<span class="line"><span style="color: #A6ACCD">                </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #A6ACCD"> i </span><span style="color: #89DDFF">&gt;=</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">int</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">len</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">train_dataloader</span><span style="color: #89DDFF">)</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">*</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">0.4</span><span style="color: #89DDFF">):</span></span>
<span class="line"><span style="color: #A6ACCD">                    </span><span style="color: #89DDFF; font-style: italic">break</span></span>
<span class="line"><span style="color: #A6ACCD">                inputs</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> labels </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> data</span></span>
<span class="line"><span style="color: #A6ACCD">                inputs</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> labels </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> inputs</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">float</span><span style="color: #89DDFF">().</span><span style="color: #82AAFF">to</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">device</span><span style="color: #89DDFF">),</span><span style="color: #A6ACCD"> labels</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">to</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">device</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">                outputs </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">net</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">inputs</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">                _</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> predicted </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> torch</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">max</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">outputs</span><span style="color: #89DDFF">.</span><span style="color: #F07178">data</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">                total </span><span style="color: #89DDFF">+=</span><span style="color: #A6ACCD"> labels</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">size</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic"># 实际的样本数</span></span>
<span class="line"><span style="color: #A6ACCD">                correct </span><span style="color: #89DDFF">+=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">predicted </span><span style="color: #89DDFF">==</span><span style="color: #A6ACCD"> labels</span><span style="color: #89DDFF">).</span><span style="color: #82AAFF">sum</span><span style="color: #89DDFF">().</span><span style="color: #82AAFF">item</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic"># 正确预测的样本数</span></span>
<span class="line"><span style="color: #A6ACCD">        </span></span>
<span class="line"><span style="color: #A6ACCD">        accuracy </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">round</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">correct </span><span style="color: #89DDFF">/</span><span style="color: #82AAFF"> total </span><span style="color: #89DDFF">*</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">100</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">3</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic"># 计算准确率</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">f</span><span style="color: #C3E88D">&#39;epoch: </span><span style="color: #F78C6C">{</span><span style="color: #82AAFF">epoch</span><span style="color: #F78C6C">}</span><span style="color: #C3E88D">, Accuracy: </span><span style="color: #F78C6C">{</span><span style="color: #82AAFF">accuracy</span><span style="color: #C792EA">:.3f</span><span style="color: #F78C6C">}</span><span style="color: #C3E88D">&#39;</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #A6ACCD"> accuracy </span><span style="color: #89DDFF">&gt;=</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">60</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic"># 太小的根本没比较保存</span></span>
<span class="line"><span style="color: #A6ACCD">            save_model_path </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">f</span><span style="color: #C3E88D">&quot;</span><span style="color: #F78C6C">{</span><span style="color: #A6ACCD">prefix</span><span style="color: #F78C6C">}</span><span style="color: #C3E88D">_vgg16_</span><span style="color: #F78C6C">{</span><span style="color: #A6ACCD">epoch</span><span style="color: #F78C6C">}</span><span style="color: #C3E88D">_</span><span style="color: #F78C6C">{</span><span style="color: #A6ACCD">accuracy</span><span style="color: #F78C6C">}</span><span style="color: #C3E88D">.pth&quot;</span></span>
<span class="line"><span style="color: #A6ACCD">            torch</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">save</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">net</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">state_dict</span><span style="color: #89DDFF">(),</span><span style="color: #82AAFF"> save_model_path</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">            </span><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">f</span><span style="color: #C3E88D">&quot;model save: &quot;</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> save_model_path</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">        </span></span>
<span class="line"><span style="color: #A6ACCD">    torch</span><span style="color: #89DDFF">.</span><span style="color: #F07178">cuda</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">empty_cache</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Finished Training</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">save_model_path </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">f</span><span style="color: #C3E88D">&quot;</span><span style="color: #F78C6C">{</span><span style="color: #A6ACCD">prefix</span><span style="color: #F78C6C">}</span><span style="color: #C3E88D">_vgg16_</span><span style="color: #F78C6C">{</span><span style="color: #A6ACCD">epoch</span><span style="color: #F78C6C">}</span><span style="color: #C3E88D">_</span><span style="color: #F78C6C">{</span><span style="color: #A6ACCD">accuracy</span><span style="color: #F78C6C">}</span><span style="color: #C3E88D">.pth&quot;</span></span>
<span class="line"><span style="color: #A6ACCD">torch</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">save</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">net</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">state_dict</span><span style="color: #89DDFF">(),</span><span style="color: #82AAFF"> save_model_path</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">f</span><span style="color: #C3E88D">&quot;model save: &quot;</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> save_model_path</span><span style="color: #89DDFF">)</span></span></code></pre>
</div><h1 id="验证训练成果" tabindex="-1">验证训练成果 <a class="header-anchor" href="#验证训练成果" aria-label="Permalink to &quot;验证训练成果&quot;">&ZeroWidthSpace;</a></h1>
<p>经过多次训练验证, 最终设置25epoch, 每轮保存结果后, 得到了多个90以上准确率的结果, 这之后我还让他训练了额外的10轮, 但是准确率都没有再提升,反而突下降了, 说明后续更多的epoch就是过拟合了, 不需要再增加轮数.<br>
最终我才用了16 epoch的模型结果:</p>
<div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #A6ACCD">epoch: 16, Accuracy: 98.001</span></span>
<span class="line"><span style="color: #A6ACCD">model save:  20240128_full_32x32_clear_906class_l2_2-_vgg16_16_98.001.pth</span></span></code></pre>
</div><h2 id="验证代码" tabindex="-1">验证代码 <a class="header-anchor" href="#验证代码" aria-label="Permalink to &quot;验证代码&quot;">&ZeroWidthSpace;</a></h2>
<p>读取模型, 并且使用手机拍照的截图, 并使用真实图片进行验证:</p>
<div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #A6ACCD">model_path </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">20240128_full_32x32_clear_906class_l2_2-_vgg16_16_98.001.pth</span><span style="color: #89DDFF">&quot;</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic"># 这个效果也不错 19, 看第一/第二个</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">model </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">VGG16_S</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">num_classes</span><span style="color: #89DDFF">=</span><span style="color: #82AAFF">total_classes_num</span><span style="color: #89DDFF">).</span><span style="color: #82AAFF">to</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">device</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span></span>
<span class="line"><span style="color: #A6ACCD">model</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">load_state_dict</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">torch</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">load</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">model_path</span><span style="color: #89DDFF">))</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">def</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">get_real_label</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">class_index</span><span style="color: #89DDFF">):</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #A6ACCD"> label_dict</span><span style="color: #89DDFF">[</span><span style="color: #A6ACCD">class_index</span><span style="color: #89DDFF">]</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">def</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">eval_predict</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">model</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD; font-style: italic">image_path</span><span style="color: #89DDFF">):</span></span>
<span class="line"><span style="color: #A6ACCD">    image </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">read_image</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">image_path</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">mode</span><span style="color: #89DDFF">=</span><span style="color: #82AAFF">torchvision</span><span style="color: #89DDFF">.</span><span style="color: #F07178">io</span><span style="color: #89DDFF">.</span><span style="color: #F07178">image</span><span style="color: #89DDFF">.</span><span style="color: #F07178">ImageReadMode</span><span style="color: #89DDFF">.</span><span style="color: #F07178">RGB</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">    inner_transform </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> transforms</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Compose</span><span style="color: #89DDFF">(</span></span>
<span class="line"><span style="color: #82AAFF">    </span><span style="color: #89DDFF">[</span></span>
<span class="line"><span style="color: #82AAFF">        transforms</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Resize</span><span style="color: #89DDFF">((</span><span style="color: #F78C6C">32</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">32</span><span style="color: #89DDFF">)),</span><span style="color: #82AAFF"> </span></span>
<span class="line"><span style="color: #82AAFF">        transforms</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">ColorJitter</span><span style="color: #89DDFF">(</span></span>
<span class="line"><span style="color: #82AAFF">            </span><span style="color: #A6ACCD; font-style: italic">brightness</span><span style="color: #89DDFF">=</span><span style="color: #F78C6C">0.1</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #82AAFF">            </span><span style="color: #A6ACCD; font-style: italic">contrast</span><span style="color: #89DDFF">=</span><span style="color: #F78C6C">0.1</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #82AAFF">            </span><span style="color: #A6ACCD; font-style: italic">saturation</span><span style="color: #89DDFF">=</span><span style="color: #F78C6C">0.1</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #82AAFF">            </span><span style="color: #A6ACCD; font-style: italic">hue</span><span style="color: #89DDFF">=</span><span style="color: #F78C6C">0.1</span><span style="color: #89DDFF">),</span><span style="color: #82AAFF">  </span><span style="color: #676E95; font-style: italic"># 抖动图像的亮度、对比度、饱和度和色相</span></span>
<span class="line"><span style="color: #82AAFF">        transforms</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Lambda</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">lambda</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">x</span><span style="color: #89DDFF">:</span><span style="color: #82AAFF"> x</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">float</span><span style="color: #89DDFF">()),</span></span>
<span class="line"><span style="color: #82AAFF">        transforms</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Normalize</span><span style="color: #89DDFF">(</span></span>
<span class="line"><span style="color: #82AAFF">            global_mean</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #82AAFF">            global_std</span></span>
<span class="line"><span style="color: #82AAFF">        </span><span style="color: #89DDFF">)</span><span style="color: #82AAFF">  </span><span style="color: #676E95; font-style: italic"># 对图片数据做正则化</span></span>
<span class="line"><span style="color: #82AAFF">    </span><span style="color: #89DDFF">])</span></span>
<span class="line"><span style="color: #A6ACCD">    model</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">eval</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #A6ACCD">    timg </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">inner_transform</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">image</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">    timg </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> timg</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">to</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">device</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">    timg1 </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> timg</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">unsqueeze</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">    result </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">model</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">timg1</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">    _</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> predicted </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> torch</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">max</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">result</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #82AAFF">get_real_label</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">predicted</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">item</span><span style="color: #89DDFF">())</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #A6ACCD"> result</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> predicted```</span></span>
<span class="line"></span>
<span class="line"><span style="color: #676E95; font-style: italic">## 验证结果可视化   </span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">推理</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> 并且得到前10个最像的类型</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> 优化用户体验</span><span style="color: #89DDFF">.</span><span style="color: #F07178"> 因为训练数据有限</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> 所以才用增加召回数量和显示各个种类识别率的形式给用户选择</span><span style="color: #89DDFF">.</span><span style="color: #F07178">毕竟</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD">本质是方便用户识别道具类型</span><span style="color: #89DDFF">.</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #A6ACCD">```python</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> torch</span><span style="color: #89DDFF">.</span><span style="color: #F07178">nn</span><span style="color: #89DDFF">.</span><span style="color: #F07178">functional</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">as</span><span style="color: #A6ACCD"> F</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> PIL </span><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> Image</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> ImageDraw</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> ImageFont</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">real_test_images </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">[</span><span style="color: #A6ACCD">i </span><span style="color: #89DDFF; font-style: italic">for</span><span style="color: #A6ACCD"> i </span><span style="color: #89DDFF; font-style: italic">in</span><span style="color: #A6ACCD"> os</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">listdir</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">cus_test_data/</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #A6ACCD"> i</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">find</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">.</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">!=</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">len</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">real_test_images</span><span style="color: #89DDFF">))</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">for</span><span style="color: #A6ACCD"> t_image_path </span><span style="color: #89DDFF; font-style: italic">in</span><span style="color: #A6ACCD"> real_test_images</span><span style="color: #89DDFF">:</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">real label: </span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> image_path</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">split</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">/</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">)[-</span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">])</span><span style="color: #A6ACCD">    </span></span>
<span class="line"><span style="color: #A6ACCD">    </span></span>
<span class="line"><span style="color: #A6ACCD">    t_image_path </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> os</span><span style="color: #89DDFF">.</span><span style="color: #F07178">path</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">join</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">cus_test_data</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> t_image_path</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">    t_image </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> Image</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">open</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">t_image_path</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">    t_image </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> t_image</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">resize</span><span style="color: #89DDFF">((</span><span style="color: #F78C6C">32</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">32</span><span style="color: #89DDFF">))</span></span>
<span class="line"><span style="color: #A6ACCD">    result</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> predicted </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">eval_predict</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">model</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> t_image_path</span><span style="color: #89DDFF">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">    probabilities </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> F</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">softmax</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">result</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">dim</span><span style="color: #89DDFF">=</span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #A6ACCD">    values</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> indices </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> torch</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">topk</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">probabilities</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">10</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">    match_images </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">[</span><span style="color: #A6ACCD">t_image</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF; font-style: italic">for</span><span style="color: #A6ACCD"> p</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> i </span><span style="color: #89DDFF; font-style: italic">in</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">zip</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">values</span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">].</span><span style="color: #82AAFF">tolist</span><span style="color: #89DDFF">(),</span><span style="color: #82AAFF"> indices</span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">].</span><span style="color: #82AAFF">tolist</span><span style="color: #89DDFF">()):</span></span>
<span class="line"><span style="color: #A6ACCD">        data </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">get_real_label</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">i</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">f</span><span style="color: #C3E88D">&quot;</span><span style="color: #F78C6C">{</span><span style="color: #82AAFF">data</span><span style="color: #89DDFF">[</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">en</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">]</span><span style="color: #F78C6C">}</span><span style="color: #C3E88D"> </span><span style="color: #F78C6C">{</span><span style="color: #82AAFF">data</span><span style="color: #89DDFF">[</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">zh</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">]</span><span style="color: #F78C6C">}</span><span style="color: #C3E88D">: </span><span style="color: #F78C6C">{</span><span style="color: #82AAFF">round</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">100</span><span style="color: #89DDFF">*</span><span style="color: #82AAFF">p</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">2</span><span style="color: #89DDFF">)</span><span style="color: #F78C6C">}</span><span style="color: #C3E88D">%&quot;</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">        match_img </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> Image</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">open</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">data</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">get</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">image</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">))</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #676E95; font-style: italic"># 创建一个可以在给定图像上绘图的对象</span></span>
<span class="line"><span style="color: #A6ACCD">        draw </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> ImageDraw</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Draw</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">match_img</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #676E95; font-style: italic"># 字体颜色</span></span>
<span class="line"><span style="color: #A6ACCD">        font_color </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">232</span><span style="color: #89DDFF">,</span><span style="color: #F78C6C">98</span><span style="color: #89DDFF">,</span><span style="color: #F78C6C">85</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #676E95; font-style: italic"># 绘制文本</span></span>
<span class="line"><span style="color: #A6ACCD">        draw</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">text</span><span style="color: #89DDFF">((</span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">),</span><span style="color: #82AAFF"> </span><span style="color: #C792EA">f</span><span style="color: #C3E88D">&quot;</span><span style="color: #F78C6C">{</span><span style="color: #82AAFF">round</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">100</span><span style="color: #89DDFF">*</span><span style="color: #82AAFF">p</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">)</span><span style="color: #F78C6C">}</span><span style="color: #C3E88D">%&quot;</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">fill</span><span style="color: #89DDFF">=</span><span style="color: #82AAFF">font_color</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">        match_images</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">append</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">match_img</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">        </span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #82AAFF">plot_images</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">match_images</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">figsize</span><span style="color: #89DDFF">=(</span><span style="color: #F78C6C">10</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">10</span><span style="color: #89DDFF">))</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #82AAFF">print</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">----------------------------------------------</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">)</span></span></code></pre>
</div><p><img src="./pic/自定义训练数据图像识别-验证真实结果-2024-01-29.png" alt="">
<img src="./pic/自定义训练数据图像识别-结果可视化-2024-01-29.png" alt="">
<img src="./pic/自定义训练数据图像识别-结果总结-2024-01-29.png" alt=""></p>
<h1 id="换用resnet网络训练对比" tabindex="-1">换用ResNet网络训练对比 <a class="header-anchor" href="#换用resnet网络训练对比" aria-label="Permalink to &quot;换用ResNet网络训练对比&quot;">&ZeroWidthSpace;</a></h1>
<div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">%%</span><span style="color: #A6ACCD">time</span></span>
<span class="line"><span style="color: #676E95; font-style: italic"># 训练模型</span></span>
<span class="line"></span>
<span class="line"><span style="color: #676E95; font-style: italic"># 加载ResNet101模型</span></span>
<span class="line"><span style="color: #A6ACCD">net </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> torchvision</span><span style="color: #89DDFF">.</span><span style="color: #F07178">models</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">resnet101</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">pretrained</span><span style="color: #89DDFF">=True)</span></span>
<span class="line"><span style="color: #A6ACCD">num_features </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> net</span><span style="color: #89DDFF">.</span><span style="color: #F07178">fc</span><span style="color: #89DDFF">.</span><span style="color: #F07178">in_features</span></span>
<span class="line"></span>
<span class="line"><span style="color: #676E95; font-style: italic"># 增加 dropout</span></span>
<span class="line"><span style="color: #A6ACCD">net</span><span style="color: #89DDFF">.</span><span style="color: #F07178">fc</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> torch</span><span style="color: #89DDFF">.</span><span style="color: #F07178">nn</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Sequential</span><span style="color: #89DDFF">(</span></span>
<span class="line"><span style="color: #82AAFF">    torch</span><span style="color: #89DDFF">.</span><span style="color: #F07178">nn</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Dropout</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">0.5</span><span style="color: #89DDFF">),</span><span style="color: #82AAFF">   </span><span style="color: #676E95; font-style: italic"># 增加 dropout避免太快过拟合</span></span>
<span class="line"><span style="color: #82AAFF">    torch</span><span style="color: #89DDFF">.</span><span style="color: #F07178">nn</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Linear</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">num_features</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> total_classes_num</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #676E95; font-style: italic"># 单层卷积, 替代了vgg的4096个全连接层,深,但是速度还更快</span></span>
<span class="line"><span style="color: #A6ACCD">net</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">to</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">device</span><span style="color: #89DDFF">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">model</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">eval</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic"># 验证模块</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">criterion </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> nn</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">CrossEntropyLoss</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #A6ACCD">optimizer </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> optim</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Adam</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">net</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">parameters</span><span style="color: #89DDFF">(),</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">lr</span><span style="color: #89DDFF">=</span><span style="color: #F78C6C">0.0001</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">weight_decay</span><span style="color: #89DDFF">=</span><span style="color: #F78C6C">0.01</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic"># 加入了l2正则化</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">check_iter </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">10</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic"># train check batch size </span></span>
<span class="line"><span style="color: #A6ACCD">train_epoch </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">25</span></span>
<span class="line"><span style="color: #A6ACCD">prefix </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">f</span><span style="color: #C3E88D">&quot;20240201_full_32x32_clear_</span><span style="color: #F78C6C">{</span><span style="color: #A6ACCD">total_classes_num</span><span style="color: #F78C6C">}</span><span style="color: #C3E88D">class_l2_2-&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">batch_size</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> batch_size</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">for</span><span style="color: #A6ACCD"> epoch </span><span style="color: #89DDFF; font-style: italic">in</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">range</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">train_epoch</span><span style="color: #89DDFF">):</span></span>
<span class="line"><span style="color: #A6ACCD">    net</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">train</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic"># 每个epoch 后切换训练模式, 那么会不会保d留之前的训练权重呢?</span></span>
<span class="line"><span style="color: #A6ACCD">    </span></span>
<span class="line"><span style="color: #A6ACCD">    progress_bar </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">tqdm</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">enumerate</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">train_dataloader</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">),</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">total</span><span style="color: #89DDFF">=</span><span style="color: #82AAFF">len</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">train_dataloader</span><span style="color: #89DDFF">))</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF; font-style: italic">for</span><span style="color: #A6ACCD"> i</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> data </span><span style="color: #89DDFF; font-style: italic">in</span><span style="color: #A6ACCD"> progress_bar</span><span style="color: #89DDFF">:</span></span>
<span class="line"><span style="color: #A6ACCD">        inputs</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> labels </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> data  </span><span style="color: #676E95; font-style: italic"># 必须要float 归一化? 浮点类型.</span></span>
<span class="line"><span style="color: #A6ACCD">        inputs</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> labels </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> inputs</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">float</span><span style="color: #89DDFF">().</span><span style="color: #82AAFF">to</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">device</span><span style="color: #89DDFF">),</span><span style="color: #A6ACCD"> labels</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">to</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">device</span><span style="color: #89DDFF">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">        optimizer</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">zero_grad</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #A6ACCD">        outputs </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">net</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">inputs</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic"># 这一步, 运行有问题, 这是为什么呢, 检查一下图片格式</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">        loss </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">criterion</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">outputs</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> labels</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">        loss</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">backward</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #A6ACCD">        optimizer</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">step</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #A6ACCD">        progress_bar</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">set_description</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">f</span><span style="color: #C3E88D">&#39;epoch:</span><span style="color: #F78C6C">{</span><span style="color: #82AAFF">epoch</span><span style="color: #F78C6C">}</span><span style="color: #C3E88D">, loss: </span><span style="color: #F78C6C">{</span><span style="color: #82AAFF">loss </span><span style="color: #89DDFF">/</span><span style="color: #82AAFF"> batch_size</span><span style="color: #C792EA">:.3f</span><span style="color: #F78C6C">}</span><span style="color: #C3E88D">&#39;</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">    </span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #A6ACCD"> epoch </span><span style="color: #89DDFF">%</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">1</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">==</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic"># 每两个epoch进行一次验证</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">开始验证....</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">        net</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">eval</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #A6ACCD">        correct </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic"># 记录正确预测的数量</span></span>
<span class="line"><span style="color: #A6ACCD">        total </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic"># 总的样本数</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #89DDFF; font-style: italic">with</span><span style="color: #A6ACCD"> torch</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">no_grad</span><span style="color: #89DDFF">():</span></span>
<span class="line"><span style="color: #A6ACCD">            </span></span>
<span class="line"><span style="color: #A6ACCD">            progress_bar2 </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">tqdm</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">enumerate</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">train_dataloader</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">),</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">total</span><span style="color: #89DDFF">=</span><span style="color: #FFCB6B">int</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">len</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">train_dataloader</span><span style="color: #89DDFF">)</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">*</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">0.4</span><span style="color: #89DDFF">))</span></span>
<span class="line"><span style="color: #A6ACCD">            </span><span style="color: #89DDFF; font-style: italic">for</span><span style="color: #A6ACCD"> i</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> data </span><span style="color: #89DDFF; font-style: italic">in</span><span style="color: #A6ACCD"> progress_bar2</span><span style="color: #89DDFF">:</span></span>
<span class="line"><span style="color: #A6ACCD">                </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #A6ACCD"> i </span><span style="color: #89DDFF">&gt;=</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">int</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">len</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">train_dataloader</span><span style="color: #89DDFF">)</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">*</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">0.4</span><span style="color: #89DDFF">):</span></span>
<span class="line"><span style="color: #A6ACCD">                    </span><span style="color: #89DDFF; font-style: italic">break</span></span>
<span class="line"><span style="color: #A6ACCD">                inputs</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> labels </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> data</span></span>
<span class="line"><span style="color: #A6ACCD">                inputs</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> labels </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> inputs</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">float</span><span style="color: #89DDFF">().</span><span style="color: #82AAFF">to</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">device</span><span style="color: #89DDFF">),</span><span style="color: #A6ACCD"> labels</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">to</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">device</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">                outputs </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">net</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">inputs</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">                _</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> predicted </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> torch</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">max</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">outputs</span><span style="color: #89DDFF">.</span><span style="color: #F07178">data</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">                total </span><span style="color: #89DDFF">+=</span><span style="color: #A6ACCD"> labels</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">size</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic"># 实际的样本数</span></span>
<span class="line"><span style="color: #A6ACCD">                correct </span><span style="color: #89DDFF">+=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">predicted </span><span style="color: #89DDFF">==</span><span style="color: #A6ACCD"> labels</span><span style="color: #89DDFF">).</span><span style="color: #82AAFF">sum</span><span style="color: #89DDFF">().</span><span style="color: #82AAFF">item</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic"># 正确预测的样本数</span></span>
<span class="line"><span style="color: #A6ACCD">        </span></span>
<span class="line"><span style="color: #A6ACCD">        accuracy </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">round</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">correct </span><span style="color: #89DDFF">/</span><span style="color: #82AAFF"> total </span><span style="color: #89DDFF">*</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">100</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">3</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic"># 计算准确率</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">f</span><span style="color: #C3E88D">&#39;epoch: </span><span style="color: #F78C6C">{</span><span style="color: #82AAFF">epoch</span><span style="color: #F78C6C">}</span><span style="color: #C3E88D">, Accuracy: </span><span style="color: #F78C6C">{</span><span style="color: #82AAFF">accuracy</span><span style="color: #C792EA">:.3f</span><span style="color: #F78C6C">}</span><span style="color: #C3E88D">&#39;</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #A6ACCD"> accuracy </span><span style="color: #89DDFF">&gt;=</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">60</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic"># 太小的根本没比较保存</span></span>
<span class="line"><span style="color: #A6ACCD">            save_model_path </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">f</span><span style="color: #C3E88D">&quot;</span><span style="color: #F78C6C">{</span><span style="color: #A6ACCD">prefix</span><span style="color: #F78C6C">}</span><span style="color: #C3E88D">_resnet101_</span><span style="color: #F78C6C">{</span><span style="color: #A6ACCD">epoch</span><span style="color: #F78C6C">}</span><span style="color: #C3E88D">_</span><span style="color: #F78C6C">{</span><span style="color: #A6ACCD">accuracy</span><span style="color: #F78C6C">}</span><span style="color: #C3E88D">.pth&quot;</span></span>
<span class="line"><span style="color: #A6ACCD">            torch</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">save</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">net</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">state_dict</span><span style="color: #89DDFF">(),</span><span style="color: #82AAFF"> save_model_path</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">            </span><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">f</span><span style="color: #C3E88D">&quot;model save: &quot;</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> save_model_path</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">        </span></span>
<span class="line"><span style="color: #A6ACCD">    torch</span><span style="color: #89DDFF">.</span><span style="color: #F07178">cuda</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">empty_cache</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Finished Training</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">save_model_path </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">f</span><span style="color: #C3E88D">&quot;</span><span style="color: #F78C6C">{</span><span style="color: #A6ACCD">prefix</span><span style="color: #F78C6C">}</span><span style="color: #C3E88D">_resnet101_</span><span style="color: #F78C6C">{</span><span style="color: #A6ACCD">epoch</span><span style="color: #F78C6C">}</span><span style="color: #C3E88D">_</span><span style="color: #F78C6C">{</span><span style="color: #A6ACCD">accuracy</span><span style="color: #F78C6C">}</span><span style="color: #C3E88D">.pth&quot;</span></span>
<span class="line"><span style="color: #A6ACCD">torch</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">save</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">net</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">state_dict</span><span style="color: #89DDFF">(),</span><span style="color: #82AAFF"> save_model_path</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">f</span><span style="color: #C3E88D">&quot;model save: &quot;</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> save_model_path</span><span style="color: #89DDFF">)</span></span></code></pre>
</div><h2 id="resnet模型验证" tabindex="-1">ResNet模型验证 <a class="header-anchor" href="#resnet模型验证" aria-label="Permalink to &quot;ResNet模型验证&quot;">&ZeroWidthSpace;</a></h2>
<p>得益于<code>ResNet</code>采用了跳跃链接, 损失值能够更好的在更深的网络中进行传递, 表现的效果就是训练更容易收敛了.</p>
<p>训练的输出如下, 可以看到resnet的收敛速度极快, 10个epoch以内就可以达到90%的准确率,, 而vggNet则要接近10个epoch是远远没法达到90%准确率的.<br>
ResNet准确性更高, 所以如果是实际应用产品的话, 可以直接不用管古老的历史包袱了, vgg当然也有它的标志性意义. 但是真实省事, 确实直接选模型挑选新一点的, 会少一些坑. 🤔</p>
<div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #FFCB6B">epoch:4,</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">loss:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0.005</span><span style="color: #C3E88D">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">100</span><span style="color: #C3E88D">%</span><span style="color: #89DDFF">|</span><span style="color: #FFCB6B">███████████████████████████████████████████████████████████████████████████████████████████████████████</span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">85/85</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">02</span><span style="color: #A6ACCD">:</span><span style="color: #F78C6C">45</span><span style="color: #89DDFF">&lt;</span><span style="color: #F78C6C">00</span><span style="color: #A6ACCD">:</span><span style="color: #F78C6C">00</span><span style="color: #A6ACCD">,  1.95s/it</span><span style="color: #89DDFF">]</span></span>
<span class="line"></span>
<span class="line"><span style="color: #FFCB6B">开始验证.</span><span style="color: #82AAFF">...</span></span>
<span class="line"></span>
<span class="line"><span style="color: #F78C6C">100</span><span style="color: #A6ACCD">%</span><span style="color: #89DDFF">|</span><span style="color: #FFCB6B">█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████</span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">34/34</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">00</span><span style="color: #A6ACCD">:</span><span style="color: #F78C6C">17</span><span style="color: #89DDFF">&lt;</span><span style="color: #F78C6C">00</span><span style="color: #A6ACCD">:</span><span style="color: #F78C6C">00</span><span style="color: #A6ACCD">,  1.90it/s</span><span style="color: #89DDFF">]</span></span>
<span class="line"></span>
<span class="line"><span style="color: #FFCB6B">epoch:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">4</span><span style="color: #C3E88D">,</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">Accuracy:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">96.507</span></span>
<span class="line"><span style="color: #FFCB6B">model</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">save:</span><span style="color: #A6ACCD">  </span><span style="color: #C3E88D">20240201_full_32x32_clear_906class_l2_2-_resnet101_4_96.507.pth</span></span></code></pre>
</div><p>载入训练后模型, 使用上面vgg16验证的代码, 进行验证, 对比后发现, 整体的泛化能力, ResNet要更好, 很多VggNet没能稳定识别的验证图片, ResNet都能比较稳定的以比较高的识别率进行识别.</p>
<h1 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">&ZeroWidthSpace;</a></h1>
<p>一时兴起的小需求, 也很多小细节需要处理.
大批量数据运行前, 需要先抽少一些类进行小批量的快速验证, 对模型和训练数据进行验证. 这次我就是先用20类进行验证, 之后才进行900多类的训练.</p>
<p>一开始用vgg, 用的是224x224的图片输入, 后面为了提速.因为是像素画,只要不要平滑, 32x32也足够清晰, 所以就调整vgg结构, 方便进行增加更多的batch_size进行更快的训练.及时调整了输入图片的尺寸以后, 我的电脑训练起来也快了很多, 40多分钟就可以完成25轮 128batch_size的模型训练, 体验还不错!</p>
<p>然后就是, 可以的话, 主动挑选更新的代码, 老的模型, 经典, 但是效果远不如新一些的模型.ResNet更快收敛, 更快训练(笑...)</p>
<p><a href="https://github.com/realzhengyiming/isaac_tools/blob/main/simple_issac_item_recognition-%E5%85%A8%E9%87%8F%E8%AE%AD%E7%BB%83%E7%9A%84%E7%89%88%E6%9C%AC.ipynb" target="_blank" rel="noreferrer">模型训练完整代码</a><br>
<a href="https://github.com/realzhengyiming/isaac_tools/blob/main/isaac_data_spider.py" target="_blank" rel="noreferrer">数据获取和处理的完整代码</a>
代码都在github上了.<br>
我要去玩游戏了, 以撒真好玩 : )</p>
<h2 id="后续优化" tabindex="-1">后续优化 <a class="header-anchor" href="#后续优化" aria-label="Permalink to &quot;后续优化&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li>增加一下真实的截图作为训练数据, 以进一步提高各个类别的准确度</li>
<li>进一步增加一些其他的数据增强, 以更好的模拟真实的使用情况</li>
</ul>
<ul>
<li>[x] 考虑换用其他模型(resnet替换验证, 改进的模型明显更好, 历史包袱应该早日丢弃.)</li>
</ul>
<ul>
<li>部署模型到移动端, 封装成应用进行使用, 改训练目标检测模型.</li>
</ul>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[LLM Agent 解读]]></title>
            <link>localhost/blog/blog/posts/2024/llm_agent.html</link>
            <guid>localhost/blog/blog/posts/2024/llm_agent.html</guid>
            <pubDate>Mon, 15 Jan 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[<h1 id="什么是llm-agent" tabindex="-1">什么是llm Agent <a class="header-anchor" href="#什么是llm-agent" aria-label="Permalink to &quot;什么是llm Agent&quot;">&ZeroWidthSpace;</a></h1>
<h1 id="引言" tabindex="-1">引言 <a class="header-anchor" href="#引言" aria-label="Permalink to &quot;引言&quot;">&ZeroWidthSpace;</a></h1>
<p><img src="./pic/rag和agent的关系.excalidraw.png" alt="">
代理(agent)的核心思想是使用语言模型来选择要<strong>执行</strong>的<strong>一系列操作</strong>。在链中，一系列操作是硬编码的（在代码中）。在代理中，语言模型用作<strong>推理引擎</strong>，以确定要执行哪些操作以及按何种顺序执行。</p>
<p>简单的理解就是, 让llm成为大脑, 然后通过agent技术,可以让llm判断和使用工具拓展他的功能, 以达到完成复杂任务的目的.</p>
]]></description>
            <content:encoded><![CDATA[<h1 id="什么是llm-agent" tabindex="-1">什么是llm Agent <a class="header-anchor" href="#什么是llm-agent" aria-label="Permalink to &quot;什么是llm Agent&quot;">&ZeroWidthSpace;</a></h1>
<h1 id="引言" tabindex="-1">引言 <a class="header-anchor" href="#引言" aria-label="Permalink to &quot;引言&quot;">&ZeroWidthSpace;</a></h1>
<p><img src="./pic/rag和agent的关系.excalidraw.png" alt="">
代理(agent)的核心思想是使用语言模型来选择要<strong>执行</strong>的<strong>一系列操作</strong>。在链中，一系列操作是硬编码的（在代码中）。在代理中，语言模型用作<strong>推理引擎</strong>，以确定要执行哪些操作以及按何种顺序执行。</p>
<p>简单的理解就是, 让llm成为大脑, 然后通过agent技术,可以让llm判断和使用工具拓展他的功能, 以达到完成复杂任务的目的.</p>
<hr>
<h1 id="工作流程" tabindex="-1">工作流程 <a class="header-anchor" href="#工作流程" aria-label="Permalink to &quot;工作流程&quot;">&ZeroWidthSpace;</a></h1>
<p>本质上就是通过多轮对话, 读取结果,解读结果, 多轮来完成确定调用意图的意思.</p>
<p>流程简单的说,有几步:</p>
<ol>
<li>用户输入问题</li>
<li>通过prompt 编写思考意图(需要llm本身能力支持), 让llm作为推理的大脑, 要求其从用户输入的自然语言中, 在工具库中选择好应该使用的工具</li>
<li>然后让llm按照预设好的格式从问题中提取出使用这个工具所需要的入参(也是通过prompt)</li>
<li>最后让exexution engine (常规算法编写的提取参数匹配和执行工具), 读取llm的参数和工具使用的选择结果, 执行结果, 并且返回给用户.</li>
</ol>
<p>exexution engine:  这个就是做字符串和调用具体功能的映射功能, 之前就卡着这儿, 不知道具体的可能性是如何做到的,  可以通过正则,或者frontmatter(看具体设计的格式).</p>
<p>让大语言模型通过json 的格式生成回答,这个就很棒, 总体的意思就是这样一个意思, 然后解析json比较简单, 所以不需要重新设计字符串格式.</p>
<p>(之前我们让llm按照我们的格式要求生成三维数据的json格式, 然后直接解析那就是三维数据了, 这其实就是 agent的思想!)</p>
<blockquote>
<p><a href="https://python.langchain.com/docs/modules/agents/" target="_blank" rel="noreferrer">Agents | 🦜️🔗 Langchain</a>
<a href="https://www.zhihu.com/question/604480991/answer/3080252928" target="_blank" rel="noreferrer">(99+ 封私信 / 80 条消息) LangChain的agent是如何把自己的函数丢给LLMs的，是prompt吗？ - 知乎 (zhihu.com)</a></p>
</blockquote>
<h1 id="思考" tabindex="-1">思考 <a class="header-anchor" href="#思考" aria-label="Permalink to &quot;思考&quot;">&ZeroWidthSpace;</a></h1>
<p><strong>问题:</strong>
为什么llm能够理解我让他以特定格式的json生成回答这种任务, 训练的时候需要特地的喂它这类json数据吗,还是不需要?</p>
<p><strong>GPT回答:</strong>
LLM可以理解并生成特定格式的JSON是因为其在训练过程中接收到的大量数据包含多样性的信息，并且使用了强大的机器学习算法来挖掘这些数据的模式。</p>
<p>这些数据可能包括各种任务，包括生成特定格式的JSON。因此，即使没有特意将“生成特定格式的JSON”作为训练任务，只要训练数据包含了足够丰富和多样的任务，LLM也能学习到这个技能。</p>
<p>遇到这类任务时，LLM会依据用户的输入，理解任务需求，并用其学习的模式生成相应格式的JSON语句，完成任务。</p>
<p>总的来说，LLM的强大主要反映在两点。首先，它的训练数据涵盖了广泛的内容，使其能够处理多样性的任务；其次，它的机器学习算法能有效利用这些数据学习了如何处理各类任务，包括生成特定格式的JSON。</p>
<h1 id="llm-agent应用" tabindex="-1">llm Agent应用 <a class="header-anchor" href="#llm-agent应用" aria-label="Permalink to &quot;llm Agent应用&quot;">&ZeroWidthSpace;</a></h1>
<p>和RAG的关系:
这种形式的一个特点就是, 目前增强的还是侧重于自然语言的任务和工作. 和<code>llm agent</code>相比,  <code>agent</code>的功能可以囊括这个, agent还可以处理非自然语言的, 类似api之类的工作. 所以看起来, agent其实可以覆盖部分RAG的概念范围.</p>
<p>所以以后非文本的任务时候就可以考虑agent, agent囊括其他工具的调用.
<img src="./pic/rag和agent的关系.excalidraw.png" alt=""></p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[vitepress自定义vue组件]]></title>
            <link>localhost/blog/blog/posts/2024/vitepress_use_vue_animation.html</link>
            <guid>localhost/blog/blog/posts/2024/vitepress_use_vue_animation.html</guid>
            <pubDate>Mon, 15 Jan 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[<BabyPulm /><h1 id="引言" tabindex="-1">引言 <a class="header-anchor" href="#引言" aria-label="Permalink to &quot;引言&quot;">&ZeroWidthSpace;</a></h1>
<p>前端的所见即所得, 还是很有意思的. 作为程序员, 没理由拒绝了解各种技术的机会. 这不, 这段时间看以撒的wiki看得多, 然后看到“梅糖宝宝”这个boss在网页上竟然有个动画角色, 点击还会跑, 还带交互和丰富的动画(和游戏中一样).这就让我产生了兴趣. 突然对前端控制动画的功能和原理有兴趣了.  特别是之前我还特别看过一下godot框架的动画.<br>
然后又想到, vitepress是支持自定义vue组件的, 然后动画的功能应该不需要和后端交互, 就想着干脆了解一下vue组件, 还有前端css动画. 看看能不能也给自己的vitepress博客也增加一个这样小动画组件, 感觉很有趣.</p>
]]></description>
            <content:encoded><![CDATA[<BabyPulm /><h1 id="引言" tabindex="-1">引言 <a class="header-anchor" href="#引言" aria-label="Permalink to &quot;引言&quot;">&ZeroWidthSpace;</a></h1>
<p>前端的所见即所得, 还是很有意思的. 作为程序员, 没理由拒绝了解各种技术的机会. 这不, 这段时间看以撒的wiki看得多, 然后看到“梅糖宝宝”这个boss在网页上竟然有个动画角色, 点击还会跑, 还带交互和丰富的动画(和游戏中一样).这就让我产生了兴趣. 突然对前端控制动画的功能和原理有兴趣了.  特别是之前我还特别看过一下godot框架的动画.<br>
然后又想到, vitepress是支持自定义vue组件的, 然后动画的功能应该不需要和后端交互, 就想着干脆了解一下vue组件, 还有前端css动画. 看看能不能也给自己的vitepress博客也增加一个这样小动画组件, 感觉很有趣.</p>
<hr>
<h2 id="前端动画" tabindex="-1">前端动画 <a class="header-anchor" href="#前端动画" aria-label="Permalink to &quot;前端动画&quot;">&ZeroWidthSpace;</a></h2>
<p>之前我小研究过一下godot游戏框架, 那时候看2d游戏的动作功能, 它就是通过逐帧图片或者雪碧sprite(也是逐帧)去配置不同动作动画, 然后按照设定播放而成的实现2d角色的动画功能的.</p>
<p>经过查阅, 前端实现动画大体上也是走逐帧动画的思路.<br>
总结起来目前有几种实现的:</p>
<ol>
<li>gif</li>
<li>js控制切换帧动画</li>
<li>css3动画</li>
<li>css动画 + js切换不同的状态</li>
<li>其它框架(基本原理是一致的, 不展开)</li>
</ol>
<h3 id="gif" tabindex="-1">gif <a class="header-anchor" href="#gif" aria-label="Permalink to &quot;gif&quot;">&ZeroWidthSpace;</a></h3>
<p>优点: 可以由视频直接转化, 互联网上拥有大量的gif, 容易获得, 成本低<br>
缺点: 支持的颜色空间有限(最大256色), 对alpha支持差, 没法独立控制播放, 暂停</p>
<h3 id="js控制切换动画" tabindex="-1">js控制切换动画 <a class="header-anchor" href="#js控制切换动画" aria-label="Permalink to &quot;js控制切换动画&quot;">&ZeroWidthSpace;</a></h3>
<p>这个方案开始就是直接的帧动画控制了, 此处是通过, 原理是通过图片设置成background, 然后通过改变<code>background-position</code>来逐帧显示子图.<br>
优点:兼容性好, 交互行灵活<br>
缺点:编写不那么方便</p>
<h3 id="css3动画" tabindex="-1">CSS3动画 <a class="header-anchor" href="#css3动画" aria-label="Permalink to &quot;CSS3动画&quot;">&ZeroWidthSpace;</a></h3>
<p>css3animation主要是围绕 <code>steps(number_of_steps, direction)</code>带有了逐帧动画连续播放的功能来实现自动的播放动画. 通过读取雪碧图, 配置好每秒播放哪些关键帧, 修改 <code>background-position</code> 的值来实现帧动画的切换.  比如:</p>
<div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #A6ACCD">&lt;!-- 通过css类配置动画的播放特性 --</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">.</span><span style="color: #FFCB6B">baby_plum_anm_Idle</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #B2CCD6">animation</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> baby_plum_anm_Idle </span><span style="color: #F78C6C">533.333333ms</span><span style="color: #A6ACCD"> step-end infinite both  </span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">&lt;!-- 关键帧动画配置 --</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">@keyframes</span><span style="color: #A6ACCD; font-style: italic"> baby_plum_anm_Idle</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #FFCB6B">0.000%</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #B2CCD6">transform</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">translate</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">-32px</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">-32px</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">scale</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">2</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">translateY</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">-48.0px</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">scale</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">1.0</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">1.0</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">translateY</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">20.0px</span><span style="color: #89DDFF">);</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #B2CCD6">background-position</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0px</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">-128px</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">...</span></span>
<span class="line"><span style="color: #A6ACCD">...</span></span></code></pre>
</div><p>优点: 使用广泛, 兼容性好, 相比纯js, 写起来简单很多<br>
缺点: css是固定, 只能固定播放</p>
<h3 id="css3动画-js" tabindex="-1">CSS3动画 + js <a class="header-anchor" href="#css3动画-js" aria-label="Permalink to &quot;CSS3动画 + js&quot;">&ZeroWidthSpace;</a></h3>
<p>这两种组合起来就几乎能灵活的满足复杂的动作变化的需求了. 比如<code>idle</code>, <code>move</code>, <code>attack</code>三种动作, 只需要先通过CSS3配置好不同逐帧动画的<code>className</code>. 然后再通过js编写不同的触发器, 通过触发器改变动画标签的<code>className</code>的值, 就可以实现流畅方便的复杂动画的组合和变化. 此次wiki上看到那种就是使用这种方法.</p>
<h2 id="vue组件" tabindex="-1">vue组件 <a class="header-anchor" href="#vue组件" aria-label="Permalink to &quot;vue组件&quot;">&ZeroWidthSpace;</a></h2>
<blockquote>
<p>Vue (发音为 /vjuː/，类似 <strong>view</strong>) 是一款用于构建用户界面的 JavaScript 框架。它基于标准 HTML、CSS 和 JavaScript 构建，并提供了一套声明式的、组件化的编程模型，帮助你高效地开发用户界面。无论是简单还是复杂的界面，Vue 都可以胜任。   ---  vue 官方介绍</p>
</blockquote>
<p>之所以看这个是因为vitepress博客是基于vue的, 并且支持使用vue去自定义和拓展页面的功能, 所以也需要了解一下这个(本人非前端专业).</p>
<p>用我消化后的理解讲, vue是其中一种可以方便的把<code>html</code>, <code>js</code>,<code>css</code> “封装”成类似小模块的代码形式, 方便了复杂前端项目的维护和管理的一个前端框架. vue组件就是vue封装子模块的子模块的叫法.  了解到此, 感觉就够用了, 也觉得非常棒, 可以更加方便的管理和使用自己的编写好的小功能/样式/组件了, 确实好用.</p>
<h2 id="编写vue组件动画代码" tabindex="-1">编写Vue组件动画代码 <a class="header-anchor" href="#编写vue组件动画代码" aria-label="Permalink to &quot;编写Vue组件动画代码&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="提取静态资源-整理html代码" tabindex="-1">提取静态资源&amp;整理html代码 <a class="header-anchor" href="#提取静态资源-整理html代码" aria-label="Permalink to &quot;提取静态资源&amp;整理html代码&quot;">&ZeroWidthSpace;</a></h3>
<p><strong>免责声明</strong>: 只用于分享和学习, 不用与盈利.<br>
因为我很喜欢&quot;梅糖宝宝&quot;这个角色, 所以接下来的演示, 我直接从wiki上把帧动画的雪碧图和资源扣下来进行用了.😆</p>
<div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">html</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">head</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">link</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">rel</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">stylesheet</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">type</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">text/css</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">href</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">./animate.css</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">head</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">div</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">style</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">z-index:1000;position: absolute; left: 0px; top: 0px; transform: translate(400.484px, 400.938px);</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">class</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;&quot;</span><span style="color: #89DDFF">  </span></span>
<span class="line"><span style="color: #89DDFF">     </span><span style="color: #C792EA">onclick</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #82AAFF">change_status</span><span style="color: #C3E88D">()</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">div</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">id</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">baby_plum</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">class</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">baby_plum_anim baby_plum_anm_Idle</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">style</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">position: absolute; left: 0px; top: 0px;</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">div</span><span style="color: #89DDFF">&gt;&lt;/</span><span style="color: #F07178">div</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #C792EA">let</span><span style="color: #A6ACCD"> isIdle </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">;</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic">// 判断是否是静候  </span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #C792EA">let</span><span style="color: #A6ACCD"> isClick </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">false</span><span style="color: #89DDFF">;</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> babyPlumAnimElement </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> document</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">getElementById</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">baby_plum</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span><span style="color: #89DDFF">;</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #A6ACCD">    babyPlumAnimElement</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">addEventListener</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">mouseover</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #89DDFF">        </span><span style="color: #676E95; font-style: italic">//鼠标悬停就打招呼, 不然就idel  </span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #A6ACCD">babyPlumAnimElement</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">classList</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">remove</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">baby_plum_anm_Idle</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #A6ACCD">babyPlumAnimElement</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">classList</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">add</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">baby_plum_anm_HelloLoop</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span><span style="color: #89DDFF">;</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #A6ACCD">    babyPlumAnimElement</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">addEventListener</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">mouseout</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #A6ACCD">babyPlumAnimElement</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">classList</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">remove</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">baby_plum_anm_HelloLoop</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #A6ACCD">babyPlumAnimElement</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">classList</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">add</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">baby_plum_anm_Idle</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span><span style="color: #89DDFF">;</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">change_status</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #A6ACCD">babyPlumAnimElement</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">className</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">baby_plum_anim</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">;</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #A6ACCD">isIdle</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #FF9CAC">false</span><span style="color: #89DDFF">;</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #A6ACCD">isClick</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">;</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #C792EA">var</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">status</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">babyPlumAnimElement</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">className</span><span style="color: #89DDFF">;</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">status</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">babyPlumAnimElement</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">classList</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #89DDFF">        </span><span style="color: #676E95; font-style: italic">// 如果不是就执行移动的操作, 随机移动到某个位置上, 执行 attack  </span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #A6ACCD">babyPlumAnimElement</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">classList</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">remove</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">baby_plum_anm_Idle</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #A6ACCD">babyPlumAnimElement</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">classList</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">add</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">baby_plum_anm_Attack1</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #82AAFF">setTimeout</span><span style="color: #F07178">(</span><span style="color: #89DDFF">()</span><span style="color: #F07178"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #A6ACCD">babyPlumAnimElement</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">classList</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">remove</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">baby_plum_anm_Attack1</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #A6ACCD">babyPlumAnimElement</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">classList</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">add</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">baby_plum_anm_Idle</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">},</span><span style="color: #F07178"> </span><span style="color: #F78C6C">1000</span><span style="color: #F07178">)  </span></span>
<span class="line"><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #89DDFF">        </span><span style="color: #676E95; font-style: italic">// 移动到新的坐标以后, 才停止这个动画, 转换回 idle  </span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #A6ACCD">isIdle</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">;</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #A6ACCD">isClick</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #FF9CAC">false</span><span style="color: #89DDFF">;</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">babyPlumAnimElement</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">classList</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;  </span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">html</span><span style="color: #89DDFF">&gt;</span></span></code></pre>
</div><p>此处我简单的抽取了雪碧图, 抽取了<code>idle</code>, <code>attack</code>, <code>hello</code> css3 className对应的代码, 并且编写监听器, 配置好了3个不同的动作交互. 然后直接浏览器中打开.<br>
对应的配置css动画以及关键帧的对应代码:</p>
<div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #A6ACCD">&lt;!-- 通过css类配置动画的播放特性 --</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">.</span><span style="color: #FFCB6B">baby_plum_anm_Idle</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #B2CCD6">animation</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> baby_plum_anm_Idle </span><span style="color: #F78C6C">533.333333ms</span><span style="color: #A6ACCD"> step-end infinite both  </span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">&lt;!-- 关键帧动画配置 --</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">@keyframes</span><span style="color: #A6ACCD; font-style: italic"> baby_plum_anm_Idle</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #FFCB6B">0.000%</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #B2CCD6">transform</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">translate</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">-32px</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">-32px</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">scale</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">2</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">translateY</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">-48.0px</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">scale</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">1.0</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">1.0</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">translateY</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">20.0px</span><span style="color: #89DDFF">);</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #B2CCD6">background-position</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0px</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">-128px</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">...</span></span>
<span class="line"><span style="color: #A6ACCD">...</span></span></code></pre>
</div><p><img src="./pic/vitepress_use_vue_animation-baby-plum.png" alt=""></p>
<p>😆正常工作, 获得一只会动的梅糖宝宝.<br>
然后我这边是希望Idle, walk, attack 三个动作以一定的情况进行不同的切换, 比如未点击的时候就默认是idle状态, 然后轮循环hello和idle; 如果鼠标放上去, 就固定的只播放hello, 疯狂挥手;如果鼠标点击,就切换攻击动画;并且不同的动画切换之前都会等待上一个动画播放完才进行对应的切换, 这样不会突变. 想这种稍微复杂的动画切换组合逻辑, 就可以考虑用状态机来实现了.
此处我没有使用状态机的写法, 而是直接通过增加延迟来放置动画切换过快(偷懒了)
然后再把它改写成vue组件的形式.</p>
<div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">template</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">div</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">:style</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">mainDivStyles</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">@click</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">changeStatus</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">div</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">id</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">baby_plum</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">:class</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">[&#39;baby_plum_anim&#39;, babyPlumClass]</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">:style</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">babyPlumStyles</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">@mouseover</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">mouseoverHandler</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">  </span></span>
<span class="line"><span style="color: #89DDFF">      </span><span style="color: #C792EA">@mouseout</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">mouseoutHandler</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">@animationend</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">animationEndHandler</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">div</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">div</span><span style="color: #89DDFF">&gt;&lt;/</span><span style="color: #F07178">template</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #676E95; font-style: italic">// 点击后生成新的坐标位置, 随机  </span></span>
<span class="line"><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">default</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">data</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">      isIdle</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">,</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">      isClick</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #FF9CAC">false</span><span style="color: #89DDFF">,</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">      babyPlumClass</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">baby_plum_anm_Idle</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">      mainDivStyles</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">        zIndex</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #F78C6C">1000</span><span style="color: #89DDFF">,</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">        position</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">absolute</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">        left</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0px</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">        top</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0px</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">        transform</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">translate(100.484px, 200.938px)</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">        transition</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">transform 2s</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #676E95; font-style: italic">// 定义动画效果  </span></span>
<span class="line"><span style="color: #F07178">      </span><span style="color: #89DDFF">},</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">      babyPlumStyles</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">        position</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">absolute</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">        left</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0px</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">        top</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0px</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">      </span><span style="color: #89DDFF">},</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">      targetPosition</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> x</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #F78C6C">100.484</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> y</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #F78C6C">200.938</span><span style="color: #F07178"> </span><span style="color: #89DDFF">},</span><span style="color: #F07178"> </span><span style="color: #676E95; font-style: italic">// 结束动画后的目标位置  </span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">};</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">},</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">methods</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">mouseoverHandler</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">      </span><span style="color: #89DDFF">this.</span><span style="color: #A6ACCD">babyPlumClass</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">baby_plum_anm_HelloLoop</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">;</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">},</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">mouseoutHandler</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">      </span><span style="color: #89DDFF">this.</span><span style="color: #A6ACCD">babyPlumClass</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">baby_plum_anm_Idle</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">;</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">},</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">changeStatus</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">      </span><span style="color: #89DDFF">this.</span><span style="color: #A6ACCD">isIdle</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #FF9CAC">false</span><span style="color: #89DDFF">;</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">      </span><span style="color: #89DDFF">this.</span><span style="color: #A6ACCD">isClick</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">;</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">      </span><span style="color: #89DDFF">this.</span><span style="color: #A6ACCD">babyPlumClass</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">baby_plum_anm_Attack1</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">;</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #89DDFF">      </span><span style="color: #676E95; font-style: italic">// 1 更新目标位置，然后修改transform效果  </span></span>
<span class="line"><span style="color: #F07178">      </span><span style="color: #89DDFF">this.</span><span style="color: #A6ACCD">targetPosition</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">x</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">Math</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">random</span><span style="color: #F07178">() </span><span style="color: #89DDFF">*</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">window</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">innerWidth</span><span style="color: #F07178"> </span><span style="color: #89DDFF">-</span><span style="color: #F07178"> </span><span style="color: #F78C6C">128</span><span style="color: #F07178"> </span><span style="color: #89DDFF">/</span><span style="color: #F07178"> </span><span style="color: #F78C6C">2</span><span style="color: #89DDFF">;</span><span style="color: #F07178">  </span><span style="color: #676E95; font-style: italic">// 将目标坐标设为新的位置  </span></span>
<span class="line"><span style="color: #F07178">      </span><span style="color: #89DDFF">this.</span><span style="color: #A6ACCD">targetPosition</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">y</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">Math</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">random</span><span style="color: #F07178">() </span><span style="color: #89DDFF">*</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">window</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">innerHeight</span><span style="color: #F07178"> </span><span style="color: #89DDFF">-</span><span style="color: #F07178"> </span><span style="color: #F78C6C">128</span><span style="color: #F07178"> </span><span style="color: #89DDFF">/</span><span style="color: #F07178"> </span><span style="color: #F78C6C">2</span><span style="color: #89DDFF">;</span><span style="color: #F07178">  </span><span style="color: #676E95; font-style: italic">// 将目标坐标设为新的位置  </span></span>
<span class="line"><span style="color: #F07178">      </span><span style="color: #89DDFF">this.</span><span style="color: #A6ACCD">mainDivStyles</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">transform</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">`</span><span style="color: #C3E88D">translate(</span><span style="color: #89DDFF">${</span><span style="color: #89DDFF">this.</span><span style="color: #A6ACCD">targetPosition</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">x</span><span style="color: #89DDFF">}</span><span style="color: #C3E88D">px, </span><span style="color: #89DDFF">${</span><span style="color: #89DDFF">this.</span><span style="color: #A6ACCD">targetPosition</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">y</span><span style="color: #89DDFF">}</span><span style="color: #C3E88D">px)</span><span style="color: #89DDFF">`</span><span style="color: #89DDFF">;</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">      </span><span style="color: #82AAFF">setTimeout</span><span style="color: #F07178">(</span><span style="color: #89DDFF">()</span><span style="color: #F07178"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">this.</span><span style="color: #A6ACCD">babyPlumClass</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">baby_plum_anm_Idle</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">;</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">this.</span><span style="color: #A6ACCD">isIdle</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">;</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">this.</span><span style="color: #A6ACCD">isClick</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #FF9CAC">false</span><span style="color: #89DDFF">;</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">      </span><span style="color: #89DDFF">},</span><span style="color: #F07178"> </span><span style="color: #F78C6C">1000</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">},</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">},</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #89DDFF">};</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">style</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">scoped</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">@import</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">./animate.css</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">;</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">style</span><span style="color: #89DDFF">&gt;</span></span></code></pre>
</div><p>再在vitepress中全局注册, 就可以全局在markdown中使用了</p>
<div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #676E95; font-style: italic">// https://vitepress.dev/guide/custom-theme</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">h</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">vue</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">VPBTheme</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@jcamp/vitepress-blog-theme</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">./style.css</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> CustomBlogHeader </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">./CustomBlogHeader.vue</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> BabyPulm </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">./baby_pulm.vue</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">default</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">...</span><span style="color: #A6ACCD">VPBTheme</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #82AAFF">Layout</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #82AAFF">h</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">VPBTheme</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">Layout</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">null,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #89DDFF">      </span><span style="color: #676E95; font-style: italic">// https://vitepress.dev/guide/extending-default-theme#layout-slots</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">enhanceApp</span><span style="color: #89DDFF">({</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD; font-style: italic">app</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD; font-style: italic">router</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD; font-style: italic">siteData</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">})</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">VPBTheme</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">enhanceApp</span><span style="color: #F07178">(</span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">app</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">router</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">siteData</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">app</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">component</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">CustomBlogHeader</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">CustomBlogHeader</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">app</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">component</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">BabyPulm</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">BabyPulm</span><span style="color: #F07178">)  </span><span style="color: #676E95; font-style: italic">// 注册自定义vue组件</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span></code></pre>
</div><p>vitepress中使用自定义vue组件也是很简单的.  添加到markdown中即可.</p>
<div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #A6ACCD">&lt;BabyPulm /&gt;</span></span></code></pre>
</div><h2 id="效果展示" tabindex="-1">效果展示 <a class="header-anchor" href="#效果展示" aria-label="Permalink to &quot;效果展示&quot;">&ZeroWidthSpace;</a></h2>
<p>效果次文档上已经可以看到了, 此网页上飞来飞去的那只梅糖宝宝就是了 🤣. 感觉还是很有趣的.</p>
<p>相关详细代码查看本博文对应的仓库即可 :
<a href="https://github.com/realzhengyiming/YiMingBlog" target="_blank" rel="noreferrer">realzhengyiming/YiMingBlog: a... new blog again 😅 (github.com)</a></p>
<h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">&ZeroWidthSpace;</a></h2>
<p>vue组件很好用, vitepress配合他可以实现任何功能了...</p>
<p>额外收获: 实现这个需求让我体会到了, 前端和游戏开发其实可以说是很相近的. 游戏开发, 2d游戏举例, 本质就是编写不同的控件, 然后给控件配置不同的监听事件, 以此实现各种交互动作. 拿这个动画的功能举例, 一个<code>多媒体</code>可交互对象, 那它可以说就是一个<strong>游戏</strong>了.
相关技术框架:<br>
<a href="https://pixijs.com/" target="_blank" rel="noreferrer">PixiJS</a></p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[vitepress和obsidian一键舒适写文/发文]]></title>
            <link>localhost/blog/blog/posts/2024/vitepress_obsidian.html</link>
            <guid>localhost/blog/blog/posts/2024/vitepress_obsidian.html</guid>
            <pubDate>Sun, 14 Jan 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[<h1 id="引言" tabindex="-1">引言 <a class="header-anchor" href="#引言" aria-label="Permalink to &quot;引言&quot;">&ZeroWidthSpace;</a></h1>
<p>在此之前很长时间我都折腾过好几个博客 🥲, 有django + mdui 自建博客; 有wordpress 框架博客...但是我每次回头都会发现, 一年到头没写几篇内容.
复盘一下, 总得来说来来去去都是一下这几个问题纠缠着:</p>
<ol>
<li>写作不方便: 可视化富文本编辑器实在用得难受</li>
<li>发布不方便: 只能用网页进行编辑的话, 流程繁琐</li>
<li>站点访问卡顿:(本人服务器配置是最低档)</li>
<li>习惯难以养成: 自己虽然说有写笔记的习惯, 但是并没有打开网页写文章的习惯, 加上(1,2,3的难受用户体验, 进一步在开头的热情结束后, 打消了自己写东西的热情)</li>
</ol>
]]></description>
            <content:encoded><![CDATA[<h1 id="引言" tabindex="-1">引言 <a class="header-anchor" href="#引言" aria-label="Permalink to &quot;引言&quot;">&ZeroWidthSpace;</a></h1>
<p>在此之前很长时间我都折腾过好几个博客 🥲, 有django + mdui 自建博客; 有wordpress 框架博客...但是我每次回头都会发现, 一年到头没写几篇内容.
复盘一下, 总得来说来来去去都是一下这几个问题纠缠着:</p>
<ol>
<li>写作不方便: 可视化富文本编辑器实在用得难受</li>
<li>发布不方便: 只能用网页进行编辑的话, 流程繁琐</li>
<li>站点访问卡顿:(本人服务器配置是最低档)</li>
<li>习惯难以养成: 自己虽然说有写笔记的习惯, 但是并没有打开网页写文章的习惯, 加上(1,2,3的难受用户体验, 进一步在开头的热情结束后, 打消了自己写东西的热情)</li>
</ol>
<hr>
<p>刚好, 今年2024年开头, 我发现了一个不错的笔记应用obsidian, 初步体验下来, 我直接放弃了notion (使用notion的时候遇到了上面列出来的问题).  并且机缘巧合查阅资料之时, 也让我看到了vitepress 博客, 于是两者一拍即合, 有了新文章和这个新博客.</p>
<h1 id="思路" tabindex="-1">思路 <a class="header-anchor" href="#思路" aria-label="Permalink to &quot;思路&quot;">&ZeroWidthSpace;</a></h1>
<p>组合的流程结构图如下:<br>
<img src="./pic/vitepress_obsidian_combine_struct.png" alt=""></p>
<h2 id="vitepress" tabindex="-1">vitepress <a class="header-anchor" href="#vitepress" aria-label="Permalink to &quot;vitepress&quot;">&ZeroWidthSpace;</a></h2>
<p>可以基于markdown 生成静态博客页面的简约框架, 我很喜欢他简洁朴素的主题风格. 可以清晰简洁舒适的展示markdown文章内容, 部署模式,可以build成dist静态资源. 方便部署在轻量级的服务器上.</p>
<h2 id="obsidian" tabindex="-1">Obsidian <a class="header-anchor" href="#obsidian" aria-label="Permalink to &quot;Obsidian&quot;">&ZeroWidthSpace;</a></h2>
<p>markdown的笔记应用, 很好用.然后他还支持很多插件.
此处通过电脑客户端上安装obsidian <code>shell commands</code>插件, 配置好一键执行的命令, 使用起来就可以很方便了, 我配置的命令如下:<br>
<img src="./pic/vitepress_obsidian-plus-command.png" alt="">
命令解释:
触发本地同文件夹下的vitepress对markdown进行编译, 然后提交到github上,
再开启<code>/</code>斜杠触发重新构建和push到github, 一键操作了, 非常的方便!</p>
<h2 id="github" tabindex="-1">github <a class="header-anchor" href="#github" aria-label="Permalink to &quot;github&quot;">&ZeroWidthSpace;</a></h2>
<p>github的仓库既可以作为云备份用, 也可以作为触发器, 利用其上的webhook功能, 再检测到push命令的时候, 给<code>博客服务器</code>发送webhook 信息请求. 然后触发<code>博客服务器</code>上进行拉取和更新操作.<br>
服务器上的简单webhook重启接收端, 我直接编写了一个基于flask简单服务, 功能很简单,就是提来git最新代码(博文静态文件), 然后复制到指定位置, 让nginx重载,完成更新.</p>
<h2 id="nginx" tabindex="-1">Nginx <a class="header-anchor" href="#nginx" aria-label="Permalink to &quot;Nginx&quot;">&ZeroWidthSpace;</a></h2>
<p>作为一个高性能静态页面服务器, 用起来也是非常的简单和容易, 特别对于我这种,博客服务器配置非常低的使用者来说, 以前的wordpress/ django, 都需要安装数据库, 或者占用很多资源, 安装很多环境依赖, 有了nginx + vitepress 就不需要考虑这么多了. 直接让他处理vitepress build后的dist博客静态资源, 简直舒服.
nginx配置也很简单, 安装好后, nginx 即可启动.</p>
<div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #C792EA">server</span><span style="color: #A6ACCD"> {  </span></span>
<span class="line"><span style="color: #A6ACCD">   </span><span style="color: #89DDFF"> listen </span><span style="color: #A6ACCD">80</span><span style="color: #89DDFF">;</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #A6ACCD">   </span><span style="color: #89DDFF"> server_name </span><span style="color: #A6ACCD">[yourdomain.com](https://yourdomain.com/ </span><span style="color: #C3E88D">&quot;https://yourdomain.com&quot;</span><span style="color: #A6ACCD">)</span><span style="color: #89DDFF">;</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic"># 将此处换成你的域名或者公网 IP  </span></span>
<span class="line"><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #C792EA">location</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">/ </span><span style="color: #A6ACCD">{  </span></span>
<span class="line"><span style="color: #A6ACCD">       </span><span style="color: #89DDFF"> root </span><span style="color: #A6ACCD">/var/www/blog/dist</span><span style="color: #89DDFF">;</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic"># 将此处修改为你的博客静态页面存放的路径  </span></span>
<span class="line"><span style="color: #A6ACCD">       </span><span style="color: #89DDFF"> index </span><span style="color: #A6ACCD">index.html</span><span style="color: #89DDFF">;</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic"># 设定默认访问的网页文件  </span></span>
<span class="line"><span style="color: #A6ACCD">       </span><span style="color: #89DDFF"> try_files $</span><span style="color: #A6ACCD">uri </span><span style="color: #89DDFF">$</span><span style="color: #A6ACCD">uri/ </span><span style="color: #F78C6C">=404</span><span style="color: #89DDFF">;</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic"># 按请求的URI来寻找文件，找不到则返回404  </span></span>
<span class="line"><span style="color: #A6ACCD">    }  </span></span>
<span class="line"><span style="color: #A6ACCD">}</span></span></code></pre>
</div><p>更新推送也只需要<code>nginx -s reload</code>就可以完成.</p>
<h2 id="效果图" tabindex="-1">效果图 <a class="header-anchor" href="#效果图" aria-label="Permalink to &quot;效果图&quot;">&ZeroWidthSpace;</a></h2>
<p>斜杠命令效果图:
<img src="./pic/vitepress_obsidian-1save.png" alt=""></p>
<p>写好文章后, obsidian上快捷运行一键命令, 然后右侧提示输出, 完成build 和 push和更新文章的所有操作, 方便快捷. /1
<img src="./pic/vitepress_obsidian-push.png" alt=""></p>
<h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">&ZeroWidthSpace;</a></h2>
<p>obsidian 写笔记/博文 --&gt; vitepress build --&gt; github --&gt; nginx.<br>
详细请查看仓库代码. 体验非常简单和舒服! 这下没有理由不输出文章了🤡hhh...</p>
<p>拓展:<br>
obsidian的<code>shell commands</code>插件可以自定义执行cmd命令. 所以,一切皆有可能, 比如后续如果有多平台的发文需求, 那直接编写好对应平台的发文的自动化代码, 然后,只需要在 <code>shell command</code>中增加一条触发命令就可以了. 真正做到, 一键写文/ 发文!</p>
<blockquote>
<p><a href="https://github.com/realzhengyiming/YiMingBlog" target="_blank" rel="noreferrer">realzhengyiming/YiMingBlog: a... new blog again</a></p>
</blockquote>
]]></content:encoded>
        </item>
    </channel>
</rss>